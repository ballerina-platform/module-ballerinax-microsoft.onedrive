// AUTO-GENERATED FILE. DO NOT MODIFY.
// This file is auto-generated by the Ballerina OpenAPI tool.

// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).
//
// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

import ballerina/http;

public type microsoft\.graph\.timeClockSettings record {
    microsoft\.graph\.geoCoordinates approvedLocation?;
};

# Represents the Queries record for the operation: getChildrenCount
public type GetChildrenCountQueries record {
    # Filter items by property values
    string \$filter?;
    # Search items by search phrases
    string \$search?;
};

public type microsoft\.graph\.multiValueLegacyExtendedProperty record {
    *microsoft\.graph\.entity;
    string[] value?;
};

public type microsoft\.graph\.plannerBucketTaskBoardTaskFormat record {
    *microsoft\.graph\.entity;
    string? orderHint?;
};

public type microsoft\.graph\.contentActivity record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.processContentRequest contentMetadata?;
    string? scopeIdentifier?;
    string? userId?;
};

public type microsoft\.graph\.permission record {
    *microsoft\.graph\.entity;
    string? expirationDateTime?;
    microsoft\.graph\.identitySet grantedTo?;
    microsoft\.graph\.identitySet[] grantedToIdentities?;
    microsoft\.graph\.sharePointIdentitySet[] grantedToIdentitiesV2?;
    microsoft\.graph\.sharePointIdentitySet grantedToV2?;
    boolean? hasPassword?;
    microsoft\.graph\.itemReference inheritedFrom?;
    microsoft\.graph\.sharingInvitation invitation?;
    microsoft\.graph\.sharingLink link?;
    string[] roles?;
    string? shareId?;
};

public type microsoft\.graph\.meetingChatMode "enabled"|"disabled"|"limited"|"unknownFutureValue";

public type microsoft\.graph\.onenote record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.notebook[] notebooks?;
    microsoft\.graph\.onenoteOperation[] operations?;
    microsoft\.graph\.onenotePage[] pages?;
    microsoft\.graph\.onenoteResource[] resources?;
    microsoft\.graph\.sectionGroup[] sectionGroups?;
    microsoft\.graph\.onenoteSection[] sections?;
};

public type microsoft\.graph\.workbookChartLegendFormat record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.workbookChartFill fill?;
    microsoft\.graph\.workbookChartFont font?;
};

public type microsoft\.graph\.messageRuleActions record {
    string[] assignCategories?;
    string? copyToFolder?;
    boolean? delete?;
    microsoft\.graph\.recipient[] forwardAsAttachmentTo?;
    microsoft\.graph\.recipient[] forwardTo?;
    boolean? markAsRead?;
    microsoft\.graph\.importance markImportance?;
    string? moveToFolder?;
    boolean? permanentDelete?;
    microsoft\.graph\.recipient[] redirectTo?;
    boolean? stopProcessingRules?;
};

public type microsoft\.graph\.onenoteOperationError record {
    string? code?;
    string? message?;
};

public type microsoft\.graph\.calendar record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.onlineMeetingProviderType[] allowedOnlineMeetingProviders?;
    boolean? canEdit?;
    boolean? canShare?;
    boolean? canViewPrivateItems?;
    string? changeKey?;
    microsoft\.graph\.calendarColor color?;
    microsoft\.graph\.onlineMeetingProviderType defaultOnlineMeetingProvider?;
    string? hexColor?;
    boolean? isDefaultCalendar?;
    boolean? isRemovable?;
    boolean? isTallyingResponses?;
    string? name?;
    microsoft\.graph\.emailAddress owner?;
    microsoft\.graph\.calendarPermission[] calendarPermissions?;
    microsoft\.graph\.event[] calendarView?;
    microsoft\.graph\.event[] events?;
    microsoft\.graph\.multiValueLegacyExtendedProperty[] multiValueExtendedProperties?;
    microsoft\.graph\.singleValueLegacyExtendedProperty[] singleValueExtendedProperties?;
};

public type microsoft\.graph\.plannerAssignments record {
};

public type microsoft\.graph\.contentType record {
    *microsoft\.graph\.entity;
    string[] associatedHubsUrls?;
    string? description?;
    microsoft\.graph\.documentSet documentSet?;
    microsoft\.graph\.documentSetContent documentTemplate?;
    string? group?;
    boolean? hidden?;
    microsoft\.graph\.itemReference inheritedFrom?;
    boolean? isBuiltIn?;
    string? name?;
    microsoft\.graph\.contentTypeOrder 'order?;
    string? parentId?;
    boolean? propagateChanges?;
    boolean? readOnly?;
    boolean? sealed?;
    microsoft\.graph\.contentType base?;
    microsoft\.graph\.contentType[] baseTypes?;
    microsoft\.graph\.columnLink[] columnLinks?;
    microsoft\.graph\.columnDefinition[] columnPositions?;
    microsoft\.graph\.columnDefinition[] columns?;
};

public type microsoft\.graph\.giphyRatingType "strict"|"moderate"|"unknownFutureValue";

public type microsoft\.graph\.userStorage record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.unifiedStorageQuota quota?;
};

public type microsoft\.graph\.settingSourceType "deviceConfiguration"|"deviceIntent";

public type microsoft\.graph\.userTeamwork record {
    *microsoft\.graph\.entity;
    string? locale?;
    string? region?;
    microsoft\.graph\.associatedTeamInfo[] associatedTeams?;
    microsoft\.graph\.userScopeTeamsAppInstallation[] installedApps?;
};

public type root_microsoft_graph_assignSensitivityLabel_body record {
    string? sensitivityLabelId?;
    microsoft\.graph\.sensitivityLabelAssignmentMethod assignmentMethod?;
    string? justificationText?;
};

public type microsoft\.graph\.timeCardState "clockedIn"|"onBreak"|"clockedOut"|"unknownFutureValue";

public type microsoft\.graph\.chatRestrictions record {
    boolean? allowTextOnly?;
};

public type microsoft\.graph\.malware record {
    string? description?;
};

public type microsoft\.graph\.mobileAppIdentifier record {
};

public type microsoft\.graph\.learningCourseActivity record {
    *microsoft\.graph\.entity;
    string? completedDateTime?;
    decimal? completionPercentage?;
    string? externalcourseActivityId?;
    string learnerUserId?;
    string learningContentId?;
    string? learningProviderId?;
    microsoft\.graph\.courseStatus status?;
};

public type microsoft\.graph\.eventType "singleInstance"|"occurrence"|"exception"|"seriesMaster";

public type microsoft\.graph\.locationUniqueIdType "unknown"|"locationStore"|"directory"|"private"|"bing";

# Represents the Queries record for the operation: listItem
public type ListItemQueries record {
    # Skip the first n items
    int \$skip?;
    # Show only the first n items
    int \$top?;
    # Filter items by property values
    string \$filter?;
    # Search items by search phrases
    string \$search?;
    # Order items by property values
    string[] \$orderby?;
    # Expand related entities
    string[] \$expand?;
    # Include count of items
    boolean \$count?;
    # Select properties to be returned
    string[] \$select?;
};

public type microsoft\.graph\.authentication record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.emailAuthenticationMethod[] emailMethods?;
    microsoft\.graph\.fido2AuthenticationMethod[] fido2Methods?;
    microsoft\.graph\.authenticationMethod[] methods?;
    microsoft\.graph\.microsoftAuthenticatorAuthenticationMethod[] microsoftAuthenticatorMethods?;
    microsoft\.graph\.longRunningOperation[] operations?;
    microsoft\.graph\.passwordAuthenticationMethod[] passwordMethods?;
    microsoft\.graph\.phoneAuthenticationMethod[] phoneMethods?;
    microsoft\.graph\.platformCredentialAuthenticationMethod[] platformCredentialMethods?;
    microsoft\.graph\.softwareOathAuthenticationMethod[] softwareOathMethods?;
    microsoft\.graph\.temporaryAccessPassAuthenticationMethod[] temporaryAccessPassMethods?;
    microsoft\.graph\.windowsHelloForBusinessAuthenticationMethod[] windowsHelloForBusinessMethods?;
};

public type microsoft\.graph\.resourceReference record {
    string? id?;
    string? 'type?;
    string? webUrl?;
};

public type microsoft\.graph\.plannerPlan record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.plannerPlanContainer container?;
    microsoft\.graph\.identitySet createdBy?;
    string? createdDateTime?;
    string? owner?;
    string title?;
    microsoft\.graph\.plannerBucket[] buckets?;
    microsoft\.graph\.plannerPlanDetails details?;
    microsoft\.graph\.plannerTask[] tasks?;
};

public type microsoft\.graph\.userActivityType "uploadText"|"uploadFile"|"downloadText"|"downloadFile"|"unknownFutureValue";

public type microsoft\.graph\.todoTaskList record {
    *microsoft\.graph\.entity;
    string? displayName?;
    boolean isOwner?;
    boolean isShared?;
    microsoft\.graph\.wellknownListName wellknownListName?;
    microsoft\.graph\.extension[] extensions?;
    microsoft\.graph\.todoTask[] tasks?;
};

public type microsoft\.graph\.workbookChartDataLabels record {
    *microsoft\.graph\.entity;
    string? position?;
    string? separator?;
    boolean? showBubbleSize?;
    boolean? showCategoryName?;
    boolean? showLegendKey?;
    boolean? showPercentage?;
    boolean? showSeriesName?;
    boolean? showValue?;
    microsoft\.graph\.workbookChartDataLabelFormat format?;
};

public type microsoft\.graph\.onlineMeetingProviderType "unknown"|"skypeForBusiness"|"skypeForConsumer"|"teamsForBusiness";

public type microsoft\.graph\.printOrientation "portrait"|"landscape"|"reverseLandscape"|"reversePortrait"|"unknownFutureValue";

public type microsoft\.graph\.thumbnailSet record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.thumbnail large?;
    microsoft\.graph\.thumbnail medium?;
    microsoft\.graph\.thumbnail small?;
    microsoft\.graph\.thumbnail 'source?;
};

public type microsoft\.graph\.termStore\.localizedDescription record {
    string? description?;
    string? languageTag?;
};

public type microsoft\.graph\.agreementAcceptance record {
    *microsoft\.graph\.entity;
    string? agreementFileId?;
    string? agreementId?;
    string? deviceDisplayName?;
    string? deviceId?;
    string? deviceOSType?;
    string? deviceOSVersion?;
    string? expirationDateTime?;
    string? recordedDateTime?;
    microsoft\.graph\.agreementAcceptanceState state?;
    string? userDisplayName?;
    string? userEmail?;
    string? userId?;
    string? userPrincipalName?;
};

public type microsoft\.graph\.sectionGroup record {
    *microsoft\.graph\.onenoteEntityHierarchyModel;
    string? sectionGroupsUrl?;
    string? sectionsUrl?;
    microsoft\.graph\.notebook parentNotebook?;
    microsoft\.graph\.sectionGroup parentSectionGroup?;
    microsoft\.graph\.sectionGroup[] sectionGroups?;
    microsoft\.graph\.onenoteSection[] sections?;
};

public type microsoft\.graph\.termStore\.relation record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.termStore\.relationType relationship?;
    microsoft\.graph\.termStore\.term fromTerm?;
    microsoft\.graph\.termStore\.set set?;
    microsoft\.graph\.termStore\.term toTerm?;
};

public type microsoft\.graph\.openShiftChangeRequest record {
    *microsoft\.graph\.scheduleChangeRequest;
    string? openShiftId?;
};

public type microsoft\.graph\.shiftActivity record {
    string? code?;
    string? displayName?;
    string? endDateTime?;
    boolean? isPaid?;
    string? startDateTime?;
    microsoft\.graph\.scheduleEntityTheme theme?;
};

public type microsoft\.graph\.sharingLink record {
    microsoft\.graph\.identity application?;
    boolean? preventsDownload?;
    string? scope?;
    string? 'type?;
    string? webHtml?;
    string? webUrl?;
};

public type microsoft\.graph\.workbookTable record {
    *microsoft\.graph\.entity;
    boolean highlightFirstColumn?;
    boolean highlightLastColumn?;
    string? legacyId?;
    string? name?;
    boolean showBandedColumns?;
    boolean showBandedRows?;
    boolean showFilterButton?;
    boolean showHeaders?;
    boolean showTotals?;
    string? style?;
    microsoft\.graph\.workbookTableColumn[] columns?;
    microsoft\.graph\.workbookTableRow[] rows?;
    microsoft\.graph\.workbookTableSort sort?;
    microsoft\.graph\.workbookWorksheet worksheet?;
};

public type microsoft\.graph\.deviceCategory record {
    *microsoft\.graph\.entity;
    string? description?;
    string? displayName?;
};

public type microsoft\.graph\.actionState "none"|"pending"|"canceled"|"active"|"done"|"failed"|"notSupported";

public type microsoft\.graph\.itemAnalytics record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.itemActivityStat allTime?;
    microsoft\.graph\.itemActivityStat[] itemActivityStats?;
    microsoft\.graph\.itemActivityStat lastSevenDays?;
};

public type microsoft\.graph\.termStore\.store record {
    *microsoft\.graph\.entity;
    string defaultLanguageTag?;
    string[] languageTags?;
    microsoft\.graph\.termStore\.group[] groups?;
    microsoft\.graph\.termStore\.set[] sets?;
};

public type microsoft\.graph\.timeOffReasonIconType "none"|"car"|"calendar"|"running"|"plane"|"firstAid"|"doctor"|"notWorking"|"clock"|"juryDuty"|"globe"|"cup"|"phone"|"weather"|"umbrella"|"piggyBank"|"dog"|"cake"|"trafficCone"|"pin"|"sunny"|"unknownFutureValue";

public type microsoft\.graph\.mediaSourceContentCategory "meeting"|"liveStream"|"presentation"|"screenRecording"|"story"|"profile"|"chat"|"note"|"comment"|"unknownFutureValue";

public type microsoft\.graph\.timeOff record {
    *microsoft\.graph\.changeTrackedEntity;
    microsoft\.graph\.timeOffItem draftTimeOff?;
    boolean? isStagedForDeletion?;
    microsoft\.graph\.timeOffItem sharedTimeOff?;
    string? userId?;
};

# Represents the Headers record for the operation: deleteRootContent
public type DeleteRootContentHeaders record {
    # ETag
    string If\-Match?;
};

public type microsoft\.graph\.calculatedColumn record {
    string? format?;
    string? formula?;
    string? outputType?;
};

public type microsoft\.graph\.baseItemVersion record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.identitySet lastModifiedBy?;
    string? lastModifiedDateTime?;
    microsoft\.graph\.publicationFacet publication?;
};

public type microsoft\.graph\.managedDevice record {
    *microsoft\.graph\.entity;
    string? activationLockBypassCode?;
    string? androidSecurityPatchLevel?;
    string? azureADDeviceId?;
    boolean? azureADRegistered?;
    string complianceGracePeriodExpirationDateTime?;
    microsoft\.graph\.complianceState complianceState?;
    microsoft\.graph\.configurationManagerClientEnabledFeatures configurationManagerClientEnabledFeatures?;
    microsoft\.graph\.deviceActionResult[] deviceActionResults?;
    string? deviceCategoryDisplayName?;
    microsoft\.graph\.deviceEnrollmentType deviceEnrollmentType?;
    microsoft\.graph\.deviceHealthAttestationState deviceHealthAttestationState?;
    string? deviceName?;
    microsoft\.graph\.deviceRegistrationState deviceRegistrationState?;
    boolean easActivated?;
    string easActivationDateTime?;
    string? easDeviceId?;
    string? emailAddress?;
    string enrolledDateTime?;
    string? enrollmentProfileName?;
    string? ethernetMacAddress?;
    microsoft\.graph\.deviceManagementExchangeAccessState exchangeAccessState?;
    microsoft\.graph\.deviceManagementExchangeAccessStateReason exchangeAccessStateReason?;
    string exchangeLastSuccessfulSyncDateTime?;
    decimal freeStorageSpaceInBytes?;
    string? iccid?;
    string? imei?;
    boolean isEncrypted?;
    boolean isSupervised?;
    string? jailBroken?;
    string lastSyncDateTime?;
    string? managedDeviceName?;
    microsoft\.graph\.managedDeviceOwnerType managedDeviceOwnerType?;
    microsoft\.graph\.managementAgentType managementAgent?;
    string managementCertificateExpirationDate?;
    string? manufacturer?;
    string? meid?;
    string? model?;
    string? notes?;
    string? operatingSystem?;
    string? osVersion?;
    microsoft\.graph\.managedDevicePartnerReportedHealthState partnerReportedThreatState?;
    string? phoneNumber?;
    decimal physicalMemoryInBytes?;
    string? remoteAssistanceSessionErrorDetails?;
    string? remoteAssistanceSessionUrl?;
    boolean? requireUserEnrollmentApproval?;
    string? serialNumber?;
    string? subscriberCarrier?;
    decimal totalStorageSpaceInBytes?;
    string? udid?;
    string? userDisplayName?;
    string? userId?;
    string? userPrincipalName?;
    string? wiFiMacAddress?;
    microsoft\.graph\.deviceCategory deviceCategory?;
    microsoft\.graph\.deviceCompliancePolicyState[] deviceCompliancePolicyStates?;
    microsoft\.graph\.deviceConfigurationState[] deviceConfigurationStates?;
    microsoft\.graph\.deviceLogCollectionResponse[] logCollectionRequests?;
    microsoft\.graph\.user[] users?;
    microsoft\.graph\.windowsProtectionState windowsProtectionState?;
};

# Represents the Queries record for the operation: getDrive
public type GetDriveQueries record {
    # Expand related entities
    string[] \$expand?;
    # Select properties to be returned
    string[] \$select?;
};

public type microsoft\.graph\.fido2AuthenticationMethod record {
    *microsoft\.graph\.authenticationMethod;
    string? aaGuid?;
    string[] attestationCertificates?;
    microsoft\.graph\.attestationLevel attestationLevel?;
    string? createdDateTime?;
    string? displayName?;
    string? model?;
};

public type microsoft\.graph\.integratedApplicationMetadata record {
    string? name?;
    string? version?;
};

public type microsoft\.graph\.printDocument record {
    *microsoft\.graph\.entity;
    string? contentType?;
    string? displayName?;
    string? downloadedDateTime?;
    decimal size?;
    string? uploadedDateTime?;
};

public type microsoft\.graph\.documentSetContent record {
    microsoft\.graph\.contentTypeInfo contentType?;
    string? fileName?;
    string? folderName?;
};

public type microsoft\.graph\.userSettings record {
    *microsoft\.graph\.entity;
    boolean contributionToContentDiscoveryAsOrganizationDisabled?;
    boolean contributionToContentDiscoveryDisabled?;
    microsoft\.graph\.userInsightsSettings itemInsights?;
    microsoft\.graph\.shiftPreferences shiftPreferences?;
    microsoft\.graph\.userStorage storage?;
    microsoft\.graph\.windowsSetting[] windows?;
};

public type microsoft\.graph\.responseType "none"|"organizer"|"tentativelyAccepted"|"accepted"|"declined"|"notResponded";

public type microsoft\.graph\.plannerUserIds record {
};

public type microsoft\.graph\.emailAddress record {
    string? address?;
    string? name?;
};

public type microsoft\.graph\.licenseAssignmentState record {
    string? assignedByGroup?;
    microsoft\.graph\.licenseAssignmentStateDisabledPlansItemsString[] disabledPlans?;
    string? 'error?;
    string? lastUpdatedDateTime?;
    string? skuId?;
    string? state?;
};

public type driveItemid_microsoft_graph_copy_body record {
    string? name?;
    microsoft\.graph\.itemReference parentReference?;
    boolean? childrenOnly = false;
    boolean? includeAllVersionHistory = false;
};

# Represents the Queries record for the operation: listItemsByPath
public type ListItemsByPathQueries record {
    # Skip the first n items
    int \$skip?;
    # Show only the first n items
    int \$top?;
    # Filter items by property values
    string \$filter?;
    # Search items by search phrases
    string \$search?;
    # Order items by property values
    string[] \$orderby?;
    # Expand related entities
    string[] \$expand?;
    # Include count of items
    boolean \$count?;
    # Select properties to be returned
    string[] \$select?;
};

public type microsoft\.graph\.checklistItem record {
    *microsoft\.graph\.entity;
    string? checkedDateTime?;
    string createdDateTime?;
    string? displayName?;
    boolean? isChecked?;
};

public type microsoft\.graph\.printFinishing "none"|"staple"|"punch"|"cover"|"bind"|"saddleStitch"|"stitchEdge"|"stapleTopLeft"|"stapleBottomLeft"|"stapleTopRight"|"stapleBottomRight"|"stitchLeftEdge"|"stitchTopEdge"|"stitchRightEdge"|"stitchBottomEdge"|"stapleDualLeft"|"stapleDualTop"|"stapleDualRight"|"stapleDualBottom"|"unknownFutureValue"|"stapleTripleLeft"|"stapleTripleTop"|"stapleTripleRight"|"stapleTripleBottom"|"bindLeft"|"bindTop"|"bindRight"|"bindBottom"|"foldAccordion"|"foldDoubleGate"|"foldGate"|"foldHalf"|"foldHalfZ"|"foldLeftGate"|"foldLetter"|"foldParallel"|"foldPoster"|"foldRightGate"|"foldZ"|"foldEngineeringZ"|"punchTopLeft"|"punchBottomLeft"|"punchTopRight"|"punchBottomRight"|"punchDualLeft"|"punchDualTop"|"punchDualRight"|"punchDualBottom"|"punchTripleLeft"|"punchTripleTop"|"punchTripleRight"|"punchTripleBottom"|"punchQuadLeft"|"punchQuadTop"|"punchQuadRight"|"punchQuadBottom"|"fold"|"trim"|"bale"|"bookletMaker"|"coat"|"laminate"|"trimAfterPages"|"trimAfterDocuments"|"trimAfterCopies"|"trimAfterJob";

public type microsoft\.graph\.documentSetVersionItem record {
    string? itemId?;
    string? title?;
    string? versionId?;
};

public type microsoft\.graph\.contentBase record {
};

public type microsoft\.graph\.channelSummary record {
    decimal? guestsCount?;
    boolean? hasMembersFromOtherTenants?;
    decimal? membersCount?;
    decimal? ownersCount?;
};

public type microsoft\.graph\.teamworkUserIdentity record {
    *microsoft\.graph\.identity;
    microsoft\.graph\.teamworkUserIdentityType userIdentityType?;
};

public type microsoft\.graph\.album record {
    string? coverImageItemId?;
};

public type microsoft\.graph\.externalAudienceScope "none"|"contactsOnly"|"all";

public type microsoft\.graph\.externalLink record {
    string? href?;
};

public type microsoft\.graph\.pageLinks record {
    microsoft\.graph\.externalLink oneNoteClientUrl?;
    microsoft\.graph\.externalLink oneNoteWebUrl?;
};

public type microsoft\.graph\.onenoteEntitySchemaObjectModel record {
    *microsoft\.graph\.onenoteEntityBaseModel;
    string? createdDateTime?;
};

public type microsoft\.graph\.sharepointIds record {
    string? listId?;
    string? listItemId?;
    string? listItemUniqueId?;
    string? siteId?;
    string? siteUrl?;
    string? tenantId?;
    string? webId?;
};

public type microsoft\.graph\.longRunningOperationStatus "notStarted"|"running"|"succeeded"|"failed"|"unknownFutureValue";

public type microsoft\.graph\.dateTimeTimeZone record {
    string dateTime?;
    string? timeZone?;
};

public type microsoft\.graph\.recurrenceRange record {
    string? endDate?;
    decimal numberOfOccurrences?;
    string? recurrenceTimeZone?;
    string? startDate?;
    microsoft\.graph\.recurrenceRangeType 'type?;
};

public type microsoft\.graph\.driveCollectionResponse record {
    microsoft\.graph\.drive[] value?;
    string? \@odata\.nextLink?;
};

public type root_microsoft_graph_invite_body record {
    boolean? requireSignIn = false;
    string[] roles?;
    boolean? sendInvitation = false;
    string? message?;
    microsoft\.graph\.driveRecipient[] recipients?;
    boolean? retainInheritedPermissions = false;
    string? expirationDateTime?;
    string? password?;
};

public type microsoft\.graph\.authenticationMethodPlatform "unknown"|"windows"|"macOS"|"iOS"|"android"|"linux"|"unknownFutureValue";

public type microsoft\.graph\.userProtectionScopeContainer record {
    *microsoft\.graph\.entity;
};

public type microsoft\.graph\.printerDefaults record {
    microsoft\.graph\.printColorMode colorMode?;
    string? contentType?;
    decimal? copiesPerJob?;
    decimal? dpi?;
    microsoft\.graph\.printDuplexMode duplexMode?;
    microsoft\.graph\.printFinishing[] finishings?;
    boolean? fitPdfToPage?;
    string? inputBin?;
    string? mediaColor?;
    string? mediaSize?;
    string? mediaType?;
    microsoft\.graph\.printMultipageLayout multipageLayout?;
    microsoft\.graph\.printOrientation orientation?;
    string? outputBin?;
    decimal? pagesPerSheet?;
    microsoft\.graph\.printQuality quality?;
    microsoft\.graph\.printScaling scaling?;
};

public type microsoft\.graph\.driveItemCollectionResponse record {
    microsoft\.graph\.driveItem[] value?;
    string? \@odata\.nextLink?;
};

public type microsoft\.graph\.listItemVersion record {
    *microsoft\.graph\.baseItemVersion;
    microsoft\.graph\.fieldValueSet fields?;
};

public type microsoft\.graph\.userPurpose "user"|"linked"|"shared"|"room"|"equipment"|"others"|"unknownFutureValue";

public type microsoft\.graph\.workingTimeSchedule record {
    *microsoft\.graph\.entity;
};

public type microsoft\.graph\.messageActionFlag "any"|"call"|"doNotForward"|"followUp"|"fyi"|"forward"|"noResponseNecessary"|"read"|"reply"|"replyToAll"|"review";

public type microsoft\.graph\.userActivity record {
    *microsoft\.graph\.entity;
    string activationUrl?;
    string activitySourceHost?;
    string appActivityId?;
    string? appDisplayName?;
    microsoft\.graph\.Json contentInfo?;
    string? contentUrl?;
    string? createdDateTime?;
    string? expirationDateTime?;
    string? fallbackUrl?;
    string? lastModifiedDateTime?;
    microsoft\.graph\.status status?;
    string? userTimezone?;
    microsoft\.graph\.visualInfo visualElements?;
    microsoft\.graph\.activityHistoryItem[] historyItems?;
};

public type microsoft\.graph\.listInfo record {
    boolean? contentTypesEnabled?;
    boolean? hidden?;
    string? template?;
};

public type root_microsoft_graph_restore_body record {
    microsoft\.graph\.itemReference parentReference?;
    string? name?;
};

public type microsoft\.graph\.status "active"|"updated"|"deleted"|"ignored"|"unknownFutureValue";

public type microsoft\.graph\.operatingSystemSpecifications record {
    string operatingSystemPlatform?;
    string operatingSystemVersion?;
};

public type microsoft\.graph\.printJobStatus record {
    string description?;
    microsoft\.graph\.printJobStateDetail[] details?;
    boolean isAcquiredByPrinter?;
    microsoft\.graph\.printJobProcessingState state?;
};

public type microsoft\.graph\.workbookCommentReply record {
    *microsoft\.graph\.entity;
    string? content?;
    string contentType?;
};

public type microsoft\.graph\.windowsSetting record {
    *microsoft\.graph\.entity;
    string? payloadType?;
    microsoft\.graph\.windowsSettingType settingType?;
    string? windowsDeviceId?;
    microsoft\.graph\.windowsSettingInstance[] instances?;
};

public type microsoft\.graph\.policyPlatformType "android"|"androidForWork"|"iOS"|"macOS"|"windowsPhone81"|"windows81AndLater"|"windows10AndLater"|"all";

public type microsoft\.graph\.timeSlot record {
    microsoft\.graph\.dateTimeTimeZone end?;
    microsoft\.graph\.dateTimeTimeZone 'start?;
};

public type microsoft\.graph\.teamsTab record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.teamsTabConfiguration configuration?;
    string? displayName?;
    string? webUrl?;
    microsoft\.graph\.teamsApp teamsApp?;
};

public type microsoft\.graph\.publicErrorDetail record {
    string? code?;
    string? message?;
    string? target?;
};

public type microsoft\.graph\.onenoteEntityBaseModel record {
    *microsoft\.graph\.entity;
    string? self?;
};

public type microsoft\.graph\.plannerChecklistItems record {
};

public type microsoft\.graph\.managedAppPolicy record {
    *microsoft\.graph\.entity;
    string createdDateTime?;
    string? description?;
    string displayName?;
    string lastModifiedDateTime?;
    string? version?;
};

public type microsoft\.graph\.event record {
    *microsoft\.graph\.outlookItem;
    boolean? allowNewTimeProposals?;
    microsoft\.graph\.attendee[] attendees?;
    microsoft\.graph\.itemBody body?;
    string? bodyPreview?;
    string[] cancelledOccurrences?;
    microsoft\.graph\.dateTimeTimeZone end?;
    boolean? hasAttachments?;
    boolean? hideAttendees?;
    string? iCalUId?;
    microsoft\.graph\.importance importance?;
    boolean? isAllDay?;
    boolean? isCancelled?;
    boolean? isDraft?;
    boolean? isOnlineMeeting?;
    boolean? isOrganizer?;
    boolean? isReminderOn?;
    microsoft\.graph\.location location?;
    microsoft\.graph\.location[] locations?;
    microsoft\.graph\.onlineMeetingInfo onlineMeeting?;
    microsoft\.graph\.onlineMeetingProviderType onlineMeetingProvider?;
    string? onlineMeetingUrl?;
    microsoft\.graph\.recipient organizer?;
    string? originalEndTimeZone?;
    string? originalStart?;
    string? originalStartTimeZone?;
    microsoft\.graph\.patternedRecurrence recurrence?;
    decimal? reminderMinutesBeforeStart?;
    boolean? responseRequested?;
    microsoft\.graph\.responseStatus responseStatus?;
    microsoft\.graph\.sensitivity sensitivity?;
    string? seriesMasterId?;
    microsoft\.graph\.freeBusyStatus showAs?;
    microsoft\.graph\.dateTimeTimeZone 'start?;
    string? subject?;
    string? transactionId?;
    microsoft\.graph\.eventType 'type?;
    string? webLink?;
    microsoft\.graph\.attachment[] attachments?;
    microsoft\.graph\.calendar calendar?;
    microsoft\.graph\.event[] exceptionOccurrences?;
    microsoft\.graph\.extension[] extensions?;
    microsoft\.graph\.event[] instances?;
    microsoft\.graph\.multiValueLegacyExtendedProperty[] multiValueExtendedProperties?;
    microsoft\.graph\.singleValueLegacyExtendedProperty[] singleValueExtendedProperties?;
};

public type microsoft\.graph\.textColumn record {
    boolean? allowMultipleLines?;
    boolean? appendChangesToExistingText?;
    decimal? linesForEditing?;
    decimal? maxLength?;
    string? textType?;
};

public type microsoft\.graph\.group record {
    *microsoft\.graph\.directoryObject;
    boolean? allowExternalSenders?;
    microsoft\.graph\.assignedLabel[] assignedLabels?;
    microsoft\.graph\.assignedLicense[] assignedLicenses?;
    boolean? autoSubscribeNewMembers?;
    string? classification?;
    string? createdDateTime?;
    string? description?;
    string? displayName?;
    string? expirationDateTime?;
    string[] groupTypes?;
    boolean? hasMembersWithLicenseErrors?;
    boolean? hideFromAddressLists?;
    boolean? hideFromOutlookClients?;
    boolean? isArchived?;
    boolean? isAssignableToRole?;
    boolean? isManagementRestricted?;
    boolean? isSubscribedByMail?;
    microsoft\.graph\.licenseProcessingState licenseProcessingState?;
    string? mail?;
    boolean? mailEnabled?;
    string? mailNickname?;
    string? membershipRule?;
    string? membershipRuleProcessingState?;
    string? onPremisesDomainName?;
    string? onPremisesLastSyncDateTime?;
    string? onPremisesNetBiosName?;
    microsoft\.graph\.onPremisesProvisioningError[] onPremisesProvisioningErrors?;
    string? onPremisesSamAccountName?;
    string? onPremisesSecurityIdentifier?;
    boolean? onPremisesSyncEnabled?;
    string? preferredDataLocation?;
    string? preferredLanguage?;
    string[] proxyAddresses?;
    string? renewedDateTime?;
    boolean? securityEnabled?;
    string? securityIdentifier?;
    microsoft\.graph\.serviceProvisioningError[] serviceProvisioningErrors?;
    string? theme?;
    string? uniqueName?;
    decimal? unseenCount?;
    string? visibility?;
    microsoft\.graph\.directoryObject[] acceptedSenders?;
    microsoft\.graph\.appRoleAssignment[] appRoleAssignments?;
    microsoft\.graph\.calendar calendar?;
    microsoft\.graph\.event[] calendarView?;
    microsoft\.graph\.conversation[] conversations?;
    microsoft\.graph\.directoryObject createdOnBehalfOf?;
    microsoft\.graph\.drive drive?;
    microsoft\.graph\.drive[] drives?;
    microsoft\.graph\.event[] events?;
    microsoft\.graph\.extension[] extensions?;
    microsoft\.graph\.groupLifecyclePolicy[] groupLifecyclePolicies?;
    microsoft\.graph\.directoryObject[] memberOf?;
    microsoft\.graph\.directoryObject[] members?;
    microsoft\.graph\.directoryObject[] membersWithLicenseErrors?;
    microsoft\.graph\.onenote onenote?;
    microsoft\.graph\.directoryObject[] owners?;
    microsoft\.graph\.resourceSpecificPermissionGrant[] permissionGrants?;
    microsoft\.graph\.profilePhoto photo?;
    microsoft\.graph\.profilePhoto[] photos?;
    microsoft\.graph\.plannerGroup planner?;
    microsoft\.graph\.directoryObject[] rejectedSenders?;
    microsoft\.graph\.groupSetting[] settings?;
    microsoft\.graph\.site[] sites?;
    microsoft\.graph\.team team?;
    microsoft\.graph\.conversationThread[] threads?;
    microsoft\.graph\.directoryObject[] transitiveMemberOf?;
    microsoft\.graph\.directoryObject[] transitiveMembers?;
};

public type microsoft\.graph\.deviceManagementTroubleshootingEvent record {
    *microsoft\.graph\.entity;
    string? correlationId?;
    string eventDateTime?;
};

public type microsoft\.graph\.virtualEventExternalInformation record {
    string? applicationId?;
    string? externalEventId?;
};

public type microsoft\.graph\.documentSet record {
    microsoft\.graph\.contentTypeInfo[] allowedContentTypes?;
    microsoft\.graph\.documentSetContent[] defaultContents?;
    boolean? propagateWelcomePageChanges?;
    boolean? shouldPrefixNameToFile?;
    string? welcomePageUrl?;
    microsoft\.graph\.columnDefinition[] sharedColumns?;
    microsoft\.graph\.columnDefinition[] welcomePageColumns?;
};

public type microsoft\.graph\.policyLocation record {
    string value?;
};

public type microsoft\.graph\.complianceState "unknown"|"compliant"|"noncompliant"|"conflict"|"error"|"inGracePeriod"|"configManager";

public type microsoft\.graph\.printMargin record {
    decimal? bottom?;
    decimal? left?;
    decimal? right?;
    decimal? top?;
};

public type microsoft\.graph\.deviceCompliancePolicySettingState record {
    string? currentValue?;
    decimal errorCode?;
    string? errorDescription?;
    string? instanceDisplayName?;
    string? setting?;
    string? settingName?;
    microsoft\.graph\.settingSource[] sources?;
    microsoft\.graph\.complianceStatus state?;
    string? userEmail?;
    string? userId?;
    string? userName?;
    string? userPrincipalName?;
};

public type driveItemid_microsoft_graph_restore_body record {
    microsoft\.graph\.itemReference parentReference?;
    string? name?;
};

public type microsoft\.graph\.automaticRepliesStatus "disabled"|"alwaysEnabled"|"scheduled";

public type microsoft\.graph\.workbookChartPoint record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.Json value?;
    microsoft\.graph\.workbookChartPointFormat format?;
};

public type microsoft\.graph\.scopedRoleMembership record {
    *microsoft\.graph\.entity;
    string administrativeUnitId?;
    string roleId?;
    microsoft\.graph\.identity roleMemberInfo?;
};

public type microsoft\.graph\.teamworkOnlineMeetingInfo record {
    string? calendarEventId?;
    string? joinWebUrl?;
    microsoft\.graph\.teamworkUserIdentity organizer?;
};

public type microsoft\.graph\.accessAction record {
};

public type microsoft\.graph\.signInActivity record {
    string? lastNonInteractiveSignInDateTime?;
    string? lastNonInteractiveSignInRequestId?;
    string? lastSignInDateTime?;
    string? lastSignInRequestId?;
    string? lastSuccessfulSignInDateTime?;
    string? lastSuccessfulSignInRequestId?;
};

public type microsoft\.graph\.activityHistoryItem record {
    *microsoft\.graph\.entity;
    decimal? activeDurationSeconds?;
    string? createdDateTime?;
    string? expirationDateTime?;
    string? lastActiveDateTime?;
    string? lastModifiedDateTime?;
    string startedDateTime?;
    microsoft\.graph\.status status?;
    string? userTimezone?;
    microsoft\.graph\.userActivity activity?;
};

public type microsoft\.graph\.windowsMalwareSeverity "unknown"|"low"|"moderate"|"high"|"severe";

public type microsoft\.graph\.managedDevicePartnerReportedHealthState "unknown"|"activated"|"deactivated"|"secured"|"lowSeverity"|"mediumSeverity"|"highSeverity"|"unresponsive"|"compromised"|"misconfigured";

public type microsoft\.graph\.windowsMalwareState "unknown"|"detected"|"cleaned"|"quarantined"|"removed"|"allowed"|"blocked"|"cleanFailed"|"quarantineFailed"|"removeFailed"|"allowFailed"|"abandoned"|"blockFailed";

public type microsoft\.graph\.chatType "oneOnOne"|"group"|"meeting"|"unknownFutureValue";

public type microsoft\.graph\.trending record {
    *microsoft\.graph\.entity;
    string? lastModifiedDateTime?;
    microsoft\.graph\.resourceReference resourceReference?;
    microsoft\.graph\.resourceVisualization resourceVisualization?;
    decimal? weight?;
    microsoft\.graph\.entity 'resource?;
};

public type microsoft\.graph\.serviceProvisioningError record {
    string? createdDateTime?;
    boolean? isResolved?;
    string? serviceInstance?;
};

public type microsoft\.graph\.chatMessageReactionIdentitySet record {
    *microsoft\.graph\.identitySet;
};

public type microsoft\.graph\.siteCollection record {
    microsoft\.graph\.siteArchivalDetails archivalDetails?;
    string? dataLocationCode?;
    string? hostname?;
    microsoft\.graph\.root root?;
};

public type microsoft\.graph\.chatMessagePolicyViolationPolicyTip record {
    string? complianceUrl?;
    string? generalText?;
    string[] matchedConditionDescriptions?;
};

public type microsoft\.graph\.printerProcessingState "unknown"|"idle"|"processing"|"stopped"|"unknownFutureValue";

public type microsoft\.graph\.plannerGroup record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.plannerPlan[] plans?;
};

public type microsoft\.graph\.device record {
    *microsoft\.graph\.directoryObject;
    boolean? accountEnabled?;
    microsoft\.graph\.alternativeSecurityId[] alternativeSecurityIds?;
    string? approximateLastSignInDateTime?;
    string? complianceExpirationDateTime?;
    string? deviceCategory?;
    string? deviceId?;
    string? deviceMetadata?;
    string? deviceOwnership?;
    decimal? deviceVersion?;
    string? displayName?;
    string? enrollmentProfileName?;
    string? enrollmentType?;
    boolean? isCompliant?;
    boolean? isManaged?;
    boolean? isManagementRestricted?;
    boolean? isRooted?;
    string? managementType?;
    string? manufacturer?;
    string? mdmAppId?;
    string? model?;
    string? onPremisesLastSyncDateTime?;
    string? onPremisesSecurityIdentifier?;
    boolean? onPremisesSyncEnabled?;
    string? operatingSystem?;
    string? operatingSystemVersion?;
    string[] physicalIds?;
    string? profileType?;
    string? registrationDateTime?;
    string[] systemLabels?;
    string? trustType?;
    microsoft\.graph\.extension[] extensions?;
    microsoft\.graph\.directoryObject[] memberOf?;
    microsoft\.graph\.directoryObject[] registeredOwners?;
    microsoft\.graph\.directoryObject[] registeredUsers?;
    microsoft\.graph\.directoryObject[] transitiveMemberOf?;
};

public type microsoft\.graph\.driveRecipient record {
    string? alias?;
    string? email?;
    string? objectId?;
};

public type microsoft\.graph\.taskStatus "notStarted"|"inProgress"|"completed"|"waitingOnOthers"|"deferred";

public type microsoft\.graph\.printerShare record {
    *microsoft\.graph\.printerBase;
    boolean allowAllUsers?;
    string createdDateTime?;
    microsoft\.graph\.printerShareViewpoint viewPoint?;
    microsoft\.graph\.group[] allowedGroups?;
    microsoft\.graph\.user[] allowedUsers?;
    microsoft\.graph\.printer printer?;
};

public type microsoft\.graph\.termStore\.localizedName record {
    string? languageTag?;
    string? name?;
};

public type driveItemid_microsoft_graph_createLink_body record {
    string? 'type?;
    string? scope?;
    string? expirationDateTime?;
    string? password?;
    string? message?;
    microsoft\.graph\.driveRecipient[] recipients?;
    boolean? retainInheritedPermissions = false;
    boolean? sendNotification = false;
};

public type microsoft\.graph\.entity record {
    string id?;
};

# OAuth2 Refresh Token Grant Configs
public type OAuth2RefreshTokenGrantConfig record {|
    *http:OAuth2RefreshTokenGrantConfig;
    # Refresh URL
    string refreshUrl = "https://login.microsoftonline.com/common/oauth2/v2.0/token";
|};

public type microsoft\.graph\.subscription record {
    *microsoft\.graph\.entity;
    string? applicationId?;
    string changeType?;
    string? clientState?;
    string? creatorId?;
    string? encryptionCertificate?;
    string? encryptionCertificateId?;
    string expirationDateTime?;
    boolean? includeResourceData?;
    string? latestSupportedTlsVersion?;
    string? lifecycleNotificationUrl?;
    string? notificationQueryOptions?;
    string notificationUrl?;
    string? notificationUrlAppId?;
    string 'resource?;
};

public type microsoft\.graph\.chatMessagePolicyViolation record {
    microsoft\.graph\.chatMessagePolicyViolationDlpActionTypes dlpAction?;
    string? justificationText?;
    microsoft\.graph\.chatMessagePolicyViolationPolicyTip policyTip?;
    microsoft\.graph\.chatMessagePolicyViolationUserActionTypes userAction?;
    microsoft\.graph\.chatMessagePolicyViolationVerdictDetailsTypes verdictDetails?;
};

public type microsoft\.graph\.meetingAttendanceReport record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.virtualEventExternalInformation[] externalEventInformation?;
    string? meetingEndDateTime?;
    string? meetingStartDateTime?;
    decimal? totalParticipantCount?;
    microsoft\.graph\.attendanceRecord[] attendanceRecords?;
};

public type microsoft\.graph\.uploadSession record {
    string? expirationDateTime?;
    string[] nextExpectedRanges?;
    string? uploadUrl?;
};

public type microsoft\.graph\.phoneType "home"|"business"|"mobile"|"other"|"assistant"|"homeFax"|"businessFax"|"otherFax"|"pager"|"radio";

public type microsoft\.graph\.shared record {
    microsoft\.graph\.identitySet owner?;
    string? scope?;
    microsoft\.graph\.identitySet sharedBy?;
    string? sharedDateTime?;
};

public type microsoft\.graph\.openShiftItem record {
    *microsoft\.graph\.shiftItem;
    decimal openSlotCount?;
};

public type microsoft\.graph\.printJobProcessingState "unknown"|"pending"|"processing"|"paused"|"stopped"|"completed"|"canceled"|"aborted"|"unknownFutureValue";

public type microsoft\.graph\.softwareOathAuthenticationMethod record {
    *microsoft\.graph\.authenticationMethod;
    string? secretKey?;
};

public type microsoft\.graph\.teamsAppDefinition record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.teamsAppAuthorization authorization?;
    microsoft\.graph\.identitySet createdBy?;
    string? description?;
    string? displayName?;
    string? lastModifiedDateTime?;
    microsoft\.graph\.teamsAppPublishingState publishingState?;
    string? shortDescription?;
    string? teamsAppId?;
    string? version?;
    microsoft\.graph\.teamworkBot bot?;
};

public type microsoft\.graph\.teamworkTagMember record {
    *microsoft\.graph\.entity;
    string? displayName?;
    string? tenantId?;
    string? userId?;
};

public type microsoft\.graph\.team record {
    *microsoft\.graph\.entity;
    string? classification?;
    string? createdDateTime?;
    string? description?;
    string? displayName?;
    string? firstChannelName?;
    microsoft\.graph\.teamFunSettings funSettings?;
    microsoft\.graph\.teamGuestSettings guestSettings?;
    string? internalId?;
    boolean? isArchived?;
    microsoft\.graph\.teamMemberSettings memberSettings?;
    microsoft\.graph\.teamMessagingSettings messagingSettings?;
    microsoft\.graph\.teamSpecialization specialization?;
    microsoft\.graph\.teamSummary summary?;
    string? tenantId?;
    microsoft\.graph\.teamVisibilityType visibility?;
    string? webUrl?;
    microsoft\.graph\.channel[] allChannels?;
    microsoft\.graph\.channel[] channels?;
    microsoft\.graph\.group group?;
    microsoft\.graph\.channel[] incomingChannels?;
    microsoft\.graph\.teamsAppInstallation[] installedApps?;
    microsoft\.graph\.conversationMember[] members?;
    microsoft\.graph\.teamsAsyncOperation[] operations?;
    microsoft\.graph\.resourceSpecificPermissionGrant[] permissionGrants?;
    microsoft\.graph\.profilePhoto photo?;
    microsoft\.graph\.channel primaryChannel?;
    microsoft\.graph\.schedule schedule?;
    microsoft\.graph\.teamworkTag[] tags?;
    microsoft\.graph\.teamsTemplate template?;
};

public type microsoft\.graph\.chatMessageType "message"|"chatEvent"|"typing"|"unknownFutureValue"|"systemEventMessage";

public type microsoft\.graph\.deviceLogCollectionResponse record {
    *microsoft\.graph\.entity;
    string? enrolledByUser?;
    string? expirationDateTimeUTC?;
    string? initiatedByUserPrincipalName?;
    string managedDeviceId?;
    string? receivedDateTimeUTC?;
    string? requestedDateTimeUTC?;
    decimal? sizeInKB?;
    microsoft\.graph\.appLogUploadState status?;
};

public type microsoft\.graph\.audioConferencing record {
    string? conferenceId?;
    string? dialinUrl?;
    string? tollFreeNumber?;
    string[] tollFreeNumbers?;
    string? tollNumber?;
    string[] tollNumbers?;
};

public type driveItemid_microsoft_graph_validatePermission_body record {
    string? challengeToken?;
    string password?;
};

public type microsoft\.graph\.weekIndex "first"|"second"|"third"|"fourth"|"last";

public type microsoft\.graph\.publicError record {
    string? code?;
    microsoft\.graph\.publicErrorDetail[] details?;
    microsoft\.graph\.publicInnerError innerError?;
    string? message?;
    string? target?;
};

public type microsoft\.graph\.plannerProgressTaskBoardTaskFormat record {
    *microsoft\.graph\.entity;
    string? orderHint?;
};

public type microsoft\.graph\.teamsTemplate record {
    *microsoft\.graph\.entity;
};

public type microsoft\.graph\.driveItemVersion record {
    *microsoft\.graph\.baseItemVersion;
    string? content?;
    decimal? size?;
};

public type microsoft\.graph\.numberColumn record {
    string? decimalPlaces?;
    string? displayAs?;
    decimal? maximum?;
    decimal? minimum?;
};

public type microsoft\.graph\.responseStatus record {
    microsoft\.graph\.responseType response?;
    string? time?;
};

public type microsoft\.graph\.operation record {
    *microsoft\.graph\.entity;
    string? createdDateTime?;
    string? lastActionDateTime?;
    microsoft\.graph\.operationStatus status?;
};

public type microsoft\.graph\.allowedLobbyAdmitterRoles "organizerAndCoOrganizersAndPresenters"|"organizerAndCoOrganizers"|"unknownFutureValue";

public type microsoft\.graph\.workbookWorksheetProtectionOptions record {
    boolean allowAutoFilter?;
    boolean allowDeleteColumns?;
    boolean allowDeleteRows?;
    boolean allowFormatCells?;
    boolean allowFormatColumns?;
    boolean allowFormatRows?;
    boolean allowInsertColumns?;
    boolean allowInsertHyperlinks?;
    boolean allowInsertRows?;
    boolean allowPivotTables?;
    boolean allowSort?;
};

public type microsoft\.graph\.calendarGroup record {
    *microsoft\.graph\.entity;
    string? changeKey?;
    string? classId?;
    string? name?;
    microsoft\.graph\.calendar[] calendars?;
};

public type microsoft\.graph\.teamworkUserIdentityType "aadUser"|"onPremiseAadUser"|"anonymousGuest"|"federatedUser"|"personalMicrosoftAccountUser"|"skypeUser"|"phoneUser"|"unknownFutureValue"|"emailUser";

public type microsoft\.graph\.chatViewpoint record {
    boolean? isHidden?;
    string? lastMessageReadDateTime?;
};

public type microsoft\.graph\.protectedApplicationMetadata record {
    *microsoft\.graph\.integratedApplicationMetadata;
    microsoft\.graph\.policyLocation applicationLocation?;
};

public type microsoft\.graph\.microsoftAuthenticatorAuthenticationMethod record {
    *microsoft\.graph\.authenticationMethod;
    string? createdDateTime?;
    string? deviceTag?;
    string? displayName?;
    string? phoneAppVersion?;
    microsoft\.graph\.device device?;
};

public type microsoft\.graph\.personType record {
    string? 'class?;
    string? subclass?;
};

public type microsoft\.graph\.mediaSource record {
    microsoft\.graph\.mediaSourceContentCategory contentCategory?;
};

# Represents the Queries record for the operation: searchInRoot
public type SearchInRootQueries record {
    # Skip the first n items
    int \$skip?;
    # Show only the first n items
    int \$top?;
    # Filter items by property values
    string \$filter?;
    # Search items by search phrases
    string \$search?;
    # Order items by property values
    string[] \$orderby?;
    # Expand related entities
    string[] \$expand?;
    # Include count of items
    boolean \$count?;
    # Select properties to be returned
    string[] \$select?;
};

# Represents the Queries record for the operation: getRootContent
public type GetRootContentQueries record {
    # Format of the content
    string \$format?;
};

public type microsoft\.graph\.workbookTableRow record {
    *microsoft\.graph\.entity;
    decimal index?;
    microsoft\.graph\.Json values?;
};

public type microsoft\.graph\.dataSecurityAndGovernance record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.sensitivityLabel[] sensitivityLabels?;
};

public type microsoft\.graph\.channel record {
    *microsoft\.graph\.entity;
    string? createdDateTime?;
    string? description?;
    string displayName?;
    string? email?;
    boolean? isArchived?;
    boolean? isFavoriteByDefault?;
    microsoft\.graph\.channelMembershipType membershipType?;
    microsoft\.graph\.channelSummary summary?;
    string? tenantId?;
    string? webUrl?;
    microsoft\.graph\.conversationMember[] allMembers?;
    microsoft\.graph\.driveItem filesFolder?;
    microsoft\.graph\.conversationMember[] members?;
    microsoft\.graph\.chatMessage[] messages?;
    microsoft\.graph\.sharedWithChannelTeamInfo[] sharedWithTeams?;
    microsoft\.graph\.teamsTab[] tabs?;
};

public type microsoft\.graph\.watermarkProtectionValues record {
    boolean? isEnabledForContentSharing?;
    boolean? isEnabledForVideo?;
};

public type microsoft\.graph\.teamsAppPermissionSet record {
    microsoft\.graph\.teamsAppResourceSpecificPermission[] resourceSpecificPermissions?;
};

public type microsoft\.graph\.workbookFilter record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.workbookFilterCriteria criteria?;
};

public type microsoft\.graph\.attestationLevel "attested"|"notAttested"|"unknownFutureValue";

public type microsoft\.graph\.printerCapabilitiesBottomMarginsItemsNumber decimal?;

public type microsoft\.graph\.audio record {
    string? album?;
    string? albumArtist?;
    string? artist?;
    decimal? bitrate?;
    string? composers?;
    string? copyright?;
    decimal? disc?;
    decimal? discCount?;
    decimal? duration?;
    string? genre?;
    boolean? hasDrm?;
    boolean? isVariableBitrate?;
    string? title?;
    decimal? track?;
    decimal? trackCount?;
    decimal? year?;
};

public type microsoft\.graph\.termColumn record {
    boolean? allowMultipleValues?;
    boolean? showFullyQualifiedName?;
    microsoft\.graph\.termStore\.term parentTerm?;
    microsoft\.graph\.termStore\.set termSet?;
};

public type microsoft\.graph\.inferenceClassificationOverride record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.inferenceClassificationType classifyAs?;
    microsoft\.graph\.emailAddress senderEmailAddress?;
};

public type driveItemid_microsoft_graph_createUploadSession_body record {
    microsoft\.graph\.driveItemUploadableProperties item?;
};

public type microsoft\.graph\.plannerOrderHintsByAssignee record {
};

public type microsoft\.graph\.importance "low"|"normal"|"high";

public type microsoft\.graph\.workbookChartAxis record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.Json majorUnit?;
    microsoft\.graph\.Json maximum?;
    microsoft\.graph\.Json minimum?;
    microsoft\.graph\.Json minorUnit?;
    microsoft\.graph\.workbookChartAxisFormat format?;
    microsoft\.graph\.workbookChartGridlines majorGridlines?;
    microsoft\.graph\.workbookChartGridlines minorGridlines?;
    microsoft\.graph\.workbookChartAxisTitle title?;
};

public type microsoft\.graph\.chatMessageActions "reactionAdded"|"reactionRemoved"|"actionUndefined"|"unknownFutureValue";

public type microsoft\.graph\.calendarPermission record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.calendarRoleType[] allowedRoles?;
    microsoft\.graph\.emailAddress emailAddress?;
    boolean? isInsideOrganization?;
    boolean? isRemovable?;
    microsoft\.graph\.calendarRoleType role?;
};

public type microsoft\.graph\.confirmedBy "none"|"user"|"manager"|"unknownFutureValue";

public type microsoft\.graph\.phoneAuthenticationMethod record {
    *microsoft\.graph\.authenticationMethod;
    string? phoneNumber?;
    microsoft\.graph\.authenticationPhoneType phoneType?;
    microsoft\.graph\.authenticationMethodSignInState smsSignInState?;
};

public type microsoft\.graph\.onlineMeeting record {
    *microsoft\.graph\.onlineMeetingBase;
    string? attendeeReport?;
    microsoft\.graph\.broadcastMeetingSettings broadcastSettings?;
    string? creationDateTime?;
    string? endDateTime?;
    string? externalId?;
    boolean? isBroadcast?;
    string? meetingTemplateId?;
    microsoft\.graph\.meetingParticipants participants?;
    string? startDateTime?;
    microsoft\.graph\.callRecording[] recordings?;
    microsoft\.graph\.callTranscript[] transcripts?;
};

public type microsoft\.graph\.termStore\.term record {
    *microsoft\.graph\.entity;
    string? createdDateTime?;
    microsoft\.graph\.termStore\.localizedDescription[] descriptions?;
    microsoft\.graph\.termStore\.localizedLabel[] labels?;
    string? lastModifiedDateTime?;
    microsoft\.graph\.keyValue[] properties?;
    microsoft\.graph\.termStore\.term[] children?;
    microsoft\.graph\.termStore\.relation[] relations?;
    microsoft\.graph\.termStore\.set set?;
};

# Represents the Queries record for the operation: searchWithinDriveItem
public type SearchWithinDriveItemQueries record {
    # Skip the first n items
    int \$skip?;
    # Show only the first n items
    int \$top?;
    # Filter items by property values
    string \$filter?;
    # Search items by search phrases
    string \$search?;
    # Order items by property values
    string[] \$orderby?;
    # Expand related entities
    string[] \$expand?;
    # Include count of items
    boolean \$count?;
    # Select properties to be returned
    string[] \$select?;
};

public type microsoft\.graph\.workingHours record {
    microsoft\.graph\.dayOfWeek[] daysOfWeek?;
    string? endTime?;
    string? startTime?;
    microsoft\.graph\.timeZoneBase timeZone?;
};

public type microsoft\.graph\.workbookChartAxisTitle record {
    *microsoft\.graph\.entity;
    string? text?;
    boolean visible?;
    microsoft\.graph\.workbookChartAxisTitleFormat format?;
};

public type microsoft\.graph\.message record {
    *microsoft\.graph\.outlookItem;
    microsoft\.graph\.recipient[] bccRecipients?;
    microsoft\.graph\.itemBody body?;
    string? bodyPreview?;
    microsoft\.graph\.recipient[] ccRecipients?;
    string? conversationId?;
    string? conversationIndex?;
    microsoft\.graph\.followupFlag flag?;
    microsoft\.graph\.recipient 'from?;
    boolean? hasAttachments?;
    microsoft\.graph\.importance importance?;
    microsoft\.graph\.inferenceClassificationType inferenceClassification?;
    microsoft\.graph\.internetMessageHeader[] internetMessageHeaders?;
    string? internetMessageId?;
    boolean? isDeliveryReceiptRequested?;
    boolean? isDraft?;
    boolean? isRead?;
    boolean? isReadReceiptRequested?;
    string? parentFolderId?;
    string? receivedDateTime?;
    microsoft\.graph\.recipient[] replyTo?;
    microsoft\.graph\.recipient sender?;
    string? sentDateTime?;
    string? subject?;
    microsoft\.graph\.recipient[] toRecipients?;
    microsoft\.graph\.itemBody uniqueBody?;
    string? webLink?;
    microsoft\.graph\.attachment[] attachments?;
    microsoft\.graph\.extension[] extensions?;
    microsoft\.graph\.multiValueLegacyExtendedProperty[] multiValueExtendedProperties?;
    microsoft\.graph\.singleValueLegacyExtendedProperty[] singleValueExtendedProperties?;
};

public type microsoft\.graph\.recurrencePatternType "daily"|"weekly"|"absoluteMonthly"|"relativeMonthly"|"absoluteYearly"|"relativeYearly";

public type microsoft\.graph\.eventMessageDetail record {
};

public type root_microsoft_graph_validatePermission_body record {
    string? challengeToken?;
    string password?;
};

public type microsoft\.graph\.agreementAcceptanceState "accepted"|"declined"|"unknownFutureValue";

public type microsoft\.graph\.itemActionStat record {
    decimal? actionCount?;
    decimal? actorCount?;
};

public type microsoft\.graph\.onlineMeetingPresenters "everyone"|"organization"|"roleIsPresenter"|"organizer"|"unknownFutureValue";

public type microsoft\.graph\.teamsAppPublishingState "submitted"|"rejected"|"published"|"unknownFutureValue";

public type microsoft\.graph\.onlineMeetingRole "attendee"|"presenter"|"unknownFutureValue"|"producer"|"coorganizer";

public type microsoft\.graph\.locationType "default"|"conferenceRoom"|"homeAddress"|"businessAddress"|"geoCoordinates"|"streetAddress"|"hotel"|"restaurant"|"localBusiness"|"postalAddress";

public type microsoft\.graph\.defaultColumnValue record {
    string? formula?;
    string? value?;
};

public type microsoft\.graph\.attendeeType "required"|"optional"|"resource";

public type microsoft\.graph\.settingSource record {
    string? displayName?;
    string? id?;
    microsoft\.graph\.settingSourceType sourceType?;
};

public type microsoft\.graph\.callRecording record {
    *microsoft\.graph\.entity;
    string? callId?;
    string? content?;
    string? contentCorrelationId?;
    string? createdDateTime?;
    string? endDateTime?;
    string? meetingId?;
    microsoft\.graph\.identitySet meetingOrganizer?;
    string? recordingContentUrl?;
};

public type microsoft\.graph\.printerFeedOrientation "longEdgeFirst"|"shortEdgeFirst"|"unknownFutureValue";

public type microsoft\.graph\.chatMessageAttachment record {
    string? content?;
    string? contentType?;
    string? contentUrl?;
    string? id?;
    string? name?;
    string? teamsAppId?;
    string? thumbnailUrl?;
};

public type microsoft\.graph\.attendeeBase record {
    *microsoft\.graph\.recipient;
    microsoft\.graph\.attendeeType 'type?;
};

public type microsoft\.graph\.workbookChartDataLabelFormat record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.workbookChartFill fill?;
    microsoft\.graph\.workbookChartFont font?;
};

public type microsoft\.graph\.shiftAvailability record {
    microsoft\.graph\.patternedRecurrence recurrence?;
    microsoft\.graph\.timeRange[] timeSlots?;
    string? timeZone?;
};

public type microsoft\.graph\.printerShareViewpoint record {
    string? lastUsedDateTime?;
};

public type microsoft\.graph\.chatMessage record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.chatMessageAttachment[] attachments?;
    microsoft\.graph\.itemBody body?;
    microsoft\.graph\.channelIdentity channelIdentity?;
    string? chatId?;
    string? createdDateTime?;
    string? deletedDateTime?;
    string? etag?;
    microsoft\.graph\.eventMessageDetail eventDetail?;
    microsoft\.graph\.chatMessageFromIdentitySet 'from?;
    microsoft\.graph\.chatMessageImportance importance?;
    string? lastEditedDateTime?;
    string? lastModifiedDateTime?;
    string locale?;
    microsoft\.graph\.chatMessageMention[] mentions?;
    microsoft\.graph\.chatMessageHistoryItem[] messageHistory?;
    microsoft\.graph\.chatMessageType messageType?;
    microsoft\.graph\.chatMessagePolicyViolation policyViolation?;
    microsoft\.graph\.chatMessageReaction[] reactions?;
    string? replyToId?;
    string? subject?;
    string? summary?;
    string? webUrl?;
    microsoft\.graph\.chatMessageHostedContent[] hostedContents?;
    microsoft\.graph\.chatMessage[] replies?;
};

public type microsoft\.graph\.messageRule record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.messageRuleActions actions?;
    microsoft\.graph\.messageRulePredicates conditions?;
    string? displayName?;
    microsoft\.graph\.messageRulePredicates exceptions?;
    boolean? hasError?;
    boolean? isEnabled?;
    boolean? isReadOnly?;
    decimal? sequence?;
};

public type microsoft\.graph\.processContentRequest record {
    microsoft\.graph\.activityMetadata activityMetadata?;
    microsoft\.graph\.processContentMetadataBase[] contentEntries?;
    microsoft\.graph\.deviceMetadata deviceMetadata?;
    microsoft\.graph\.integratedApplicationMetadata integratedAppMetadata?;
    microsoft\.graph\.protectedApplicationMetadata protectedAppMetadata?;
};

public type microsoft\.graph\.person record {
    *microsoft\.graph\.entity;
    string? birthday?;
    string? companyName?;
    string? department?;
    string? displayName?;
    string? givenName?;
    string? imAddress?;
    boolean? isFavorite?;
    string? jobTitle?;
    string? officeLocation?;
    string? personNotes?;
    microsoft\.graph\.personType personType?;
    microsoft\.graph\.phone[] phones?;
    microsoft\.graph\.location[] postalAddresses?;
    string? profession?;
    microsoft\.graph\.scoredEmailAddress[] scoredEmailAddresses?;
    string? surname?;
    string? userPrincipalName?;
    microsoft\.graph\.website[] websites?;
    string? yomiCompany?;
};

public type microsoft\.graph\.systemFacet record {
};

public type microsoft\.graph\.managementAgentType "eas"|"mdm"|"easMdm"|"intuneClient"|"easIntuneClient"|"configurationManagerClient"|"configurationManagerClientMdm"|"configurationManagerClientMdmEas"|"unknown"|"jamf"|"googleCloudDevicePolicyController"|"microsoft365ManagedMdm"|"msSense";

public type microsoft\.graph\.printTaskDefinition record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.appIdentity createdBy?;
    string displayName?;
    microsoft\.graph\.printTask[] tasks?;
};

public type microsoft\.graph\.onenoteOperation record {
    *microsoft\.graph\.operation;
    microsoft\.graph\.onenoteOperationError 'error?;
    string? percentComplete?;
    string? resourceId?;
    string? resourceLocation?;
};

public type microsoft\.graph\.publicInnerError record {
    string? code?;
    microsoft\.graph\.publicErrorDetail[] details?;
    string? message?;
    string? target?;
};

public type microsoft\.graph\.quota record {
    decimal? deleted?;
    decimal? remaining?;
    string? state?;
    microsoft\.graph\.storagePlanInformation storagePlanInformation?;
    decimal? total?;
    decimal? used?;
};

# Represents the Queries record for the operation: search
public type SearchQueries record {
    # Skip the first n items
    int \$skip?;
    # Show only the first n items
    int \$top?;
    # Filter items by property values
    string \$filter?;
    # Search items by search phrases
    string \$search?;
    # Order items by property values
    string[] \$orderby?;
    # Expand related entities
    string[] \$expand?;
    # Include count of items
    boolean \$count?;
    # Select properties to be returned
    string[] \$select?;
};

public type microsoft\.graph\.notebookLinks record {
    microsoft\.graph\.externalLink oneNoteClientUrl?;
    microsoft\.graph\.externalLink oneNoteWebUrl?;
};

public type microsoft\.graph\.printer record {
    *microsoft\.graph\.printerBase;
    boolean hasPhysicalDevice?;
    boolean isShared?;
    string? lastSeenDateTime?;
    string registeredDateTime?;
    microsoft\.graph\.printConnector[] connectors?;
    microsoft\.graph\.printerShare[] shares?;
    microsoft\.graph\.printTaskTrigger[] taskTriggers?;
};

public type microsoft\.graph\.security\.behaviorDuringRetentionPeriod "doNotRetain"|"retain"|"retainAsRecord"|"retainAsRegulatoryRecord"|"unknownFutureValue";

# Represents the Headers record for the operation: deleteItemsContent
public type DeleteItemsContentHeaders record {
    # ETag
    string If\-Match?;
};

public type microsoft\.graph\.printerBase record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.printerCapabilities capabilities?;
    microsoft\.graph\.printerDefaults defaults?;
    string displayName?;
    boolean? isAcceptingJobs?;
    microsoft\.graph\.printerLocation location?;
    string? manufacturer?;
    string? model?;
    microsoft\.graph\.printerStatus status?;
    microsoft\.graph\.printJob[] jobs?;
};

public type microsoft\.graph\.workbookComment record {
    *microsoft\.graph\.entity;
    string? content?;
    string contentType?;
    microsoft\.graph\.workbookCommentReply[] replies?;
};

public type microsoft\.graph\.usageRightsIncluded record {
    *microsoft\.graph\.entity;
    string? ownerEmail?;
    string? userEmail?;
    microsoft\.graph\.usageRights value?;
};

public type microsoft\.graph\.labelActionSource "manual"|"automatic"|"recommended"|"none"|"unknownFutureValue";

public type microsoft\.graph\.timeCardEvent record {
    string dateTime?;
    boolean? isAtApprovedLocation?;
    microsoft\.graph\.itemBody notes?;
};

public type microsoft\.graph\.deviceConfigurationSettingState record {
    string? currentValue?;
    decimal errorCode?;
    string? errorDescription?;
    string? instanceDisplayName?;
    string? setting?;
    string? settingName?;
    microsoft\.graph\.settingSource[] sources?;
    microsoft\.graph\.complianceStatus state?;
    string? userEmail?;
    string? userId?;
    string? userName?;
    string? userPrincipalName?;
};

public type microsoft\.graph\.onlineMeetingInfo record {
    string? conferenceId?;
    string? joinUrl?;
    microsoft\.graph\.phone[] phones?;
    string? quickDial?;
    string[] tollFreeNumbers?;
    string? tollNumber?;
};

public type microsoft\.graph\.sensitivityLabelAssignment record {
    microsoft\.graph\.sensitivityLabelAssignmentMethod assignmentMethod?;
    string sensitivityLabelId?;
    string tenantId?;
};

public type microsoft\.graph\.scheduleEntity record {
    string? endDateTime?;
    string? startDateTime?;
    microsoft\.graph\.scheduleEntityTheme theme?;
};

public type microsoft\.graph\.userIdentity record {
    *microsoft\.graph\.identity;
    string? ipAddress?;
    string? userPrincipalName?;
};

public type microsoft\.graph\.automaticRepliesSetting record {
    microsoft\.graph\.externalAudienceScope externalAudience?;
    string? externalReplyMessage?;
    string? internalReplyMessage?;
    microsoft\.graph\.dateTimeTimeZone scheduledEndDateTime?;
    microsoft\.graph\.dateTimeTimeZone scheduledStartDateTime?;
    microsoft\.graph\.automaticRepliesStatus status?;
};

public type microsoft\.graph\.columnValidation record {
    string? defaultLanguage?;
    microsoft\.graph\.displayNameLocalization[] descriptions?;
    string? formula?;
};

public type rootpathtoitem_microsoft_graph_copy_body record {
    string? name?;
    microsoft\.graph\.itemReference parentReference?;
    boolean? childrenOnly = false;
    boolean? includeAllVersionHistory = false;
};

public type microsoft\.graph\.sensitivity "normal"|"personal"|"private"|"confidential";

public type microsoft\.graph\.extension record {
    *microsoft\.graph\.entity;
};

public type microsoft\.graph\.assignedPlan record {
    string? assignedDateTime?;
    string? capabilityStatus?;
    string? 'service?;
    string? servicePlanId?;
};

public type microsoft\.graph\.printConnector record {
    *microsoft\.graph\.entity;
    string appVersion?;
    string displayName?;
    string fullyQualifiedDomainName?;
    microsoft\.graph\.printerLocation location?;
    string operatingSystem?;
    string registeredDateTime?;
};

public type microsoft\.graph\.cloudClipboardRoot record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.cloudClipboardItem[] items?;
};

public type microsoft\.graph\.localeInfo record {
    string? displayName?;
    string? locale?;
};

public type microsoft\.graph\.printQuality "low"|"medium"|"high"|"unknownFutureValue";

public type microsoft\.graph\.conversation record {
    *microsoft\.graph\.entity;
    boolean hasAttachments?;
    string lastDeliveredDateTime?;
    string preview?;
    string topic?;
    string[] uniqueSenders?;
    microsoft\.graph\.conversationThread[] threads?;
};

public type microsoft\.graph\.chatMessageHistoryItem record {
    microsoft\.graph\.chatMessageActions actions?;
    string modifiedDateTime?;
    microsoft\.graph\.chatMessageReaction reaction?;
};

public type microsoft\.graph\.freeBusyStatus "unknown"|"free"|"tentative"|"busy"|"oof"|"workingElsewhere";

# Represents the Queries record for the operation: sharedWithMe
public type SharedWithMeQueries record {
    # Skip the first n items
    int \$skip?;
    # Show only the first n items
    int \$top?;
    # Filter items by property values
    string \$filter?;
    # Search items by search phrases
    string \$search?;
    # Order items by property values
    string[] \$orderby?;
    # Expand related entities
    string[] \$expand?;
    # Include count of items
    boolean \$count?;
    # Select properties to be returned
    string[] \$select?;
};

public type microsoft\.graph\.attachment record {
    *microsoft\.graph\.entity;
    string? contentType?;
    boolean isInline?;
    string? lastModifiedDateTime?;
    string? name?;
    decimal size?;
};

public type microsoft\.graph\.timeCard record {
    *microsoft\.graph\.changeTrackedEntity;
    microsoft\.graph\.timeCardBreak[] breaks?;
    microsoft\.graph\.timeCardEvent clockInEvent?;
    microsoft\.graph\.timeCardEvent clockOutEvent?;
    microsoft\.graph\.confirmedBy confirmedBy?;
    microsoft\.graph\.itemBody notes?;
    microsoft\.graph\.timeCardEntry originalEntry?;
    microsoft\.graph\.timeCardState state?;
    string? userId?;
};

public type microsoft\.graph\.workbookChartAxes record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.workbookChartAxis categoryAxis?;
    microsoft\.graph\.workbookChartAxis seriesAxis?;
    microsoft\.graph\.workbookChartAxis valueAxis?;
};

public type microsoft\.graph\.managedAppOperation record {
    *microsoft\.graph\.entity;
    string? displayName?;
    string lastModifiedDateTime?;
    string? state?;
    string? version?;
};

public type microsoft\.graph\.windowsDeviceMalwareState record {
    *microsoft\.graph\.entity;
    string? additionalInformationUrl?;
    microsoft\.graph\.windowsMalwareCategory category?;
    decimal? detectionCount?;
    string? displayName?;
    microsoft\.graph\.windowsMalwareExecutionState executionState?;
    string? initialDetectionDateTime?;
    string? lastStateChangeDateTime?;
    microsoft\.graph\.windowsMalwareSeverity severity?;
    microsoft\.graph\.windowsMalwareState state?;
    microsoft\.graph\.windowsMalwareThreatState threatState?;
};

public type microsoft\.graph\.sharePointIdentity record {
    *microsoft\.graph\.identity;
    string? loginName?;
};

public type microsoft\.graph\.contact record {
    *microsoft\.graph\.outlookItem;
    string? assistantName?;
    string? birthday?;
    microsoft\.graph\.physicalAddress businessAddress?;
    string? businessHomePage?;
    string[] businessPhones?;
    string[] children?;
    string? companyName?;
    string? department?;
    string? displayName?;
    microsoft\.graph\.emailAddress[] emailAddresses?;
    string? fileAs?;
    string? generation?;
    string? givenName?;
    microsoft\.graph\.physicalAddress homeAddress?;
    string[] homePhones?;
    string[] imAddresses?;
    string? initials?;
    string? jobTitle?;
    string? manager?;
    string? middleName?;
    string? mobilePhone?;
    string? nickName?;
    string? officeLocation?;
    microsoft\.graph\.physicalAddress otherAddress?;
    string? parentFolderId?;
    string? personalNotes?;
    string? profession?;
    string? spouseName?;
    string? surname?;
    string? title?;
    string? yomiCompanyName?;
    string? yomiGivenName?;
    string? yomiSurname?;
    microsoft\.graph\.extension[] extensions?;
    microsoft\.graph\.multiValueLegacyExtendedProperty[] multiValueExtendedProperties?;
    microsoft\.graph\.profilePhoto photo?;
    microsoft\.graph\.singleValueLegacyExtendedProperty[] singleValueExtendedProperties?;
};

public type microsoft\.graph\.processContentMetadataBase record {
    microsoft\.graph\.contentBase content?;
    string? correlationId?;
    string createdDateTime?;
    string identifier?;
    boolean isTruncated?;
    decimal? length?;
    string modifiedDateTime?;
    string name?;
    decimal? sequenceNumber?;
};

public type microsoft\.graph\.workbook record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.workbookApplication application?;
    microsoft\.graph\.workbookComment[] comments?;
    microsoft\.graph\.workbookFunctions functions?;
    microsoft\.graph\.workbookNamedItem[] names?;
    microsoft\.graph\.workbookOperation[] operations?;
    microsoft\.graph\.workbookTable[] tables?;
    microsoft\.graph\.workbookWorksheet[] worksheets?;
};

public type microsoft\.graph\.sharingDetail record {
    microsoft\.graph\.insightIdentity sharedBy?;
    string? sharedDateTime?;
    microsoft\.graph\.resourceReference sharingReference?;
    string? sharingSubject?;
    string? sharingType?;
};

public type microsoft\.graph\.assignedLicense record {
    microsoft\.graph\.assignedLicenseDisabledPlansItemsString[] disabledPlans?;
    string? skuId?;
};

public type microsoft\.graph\.plannerTask record {
    *microsoft\.graph\.entity;
    decimal? activeChecklistItemCount?;
    microsoft\.graph\.plannerAppliedCategories appliedCategories?;
    string? assigneePriority?;
    microsoft\.graph\.plannerAssignments assignments?;
    string? bucketId?;
    decimal? checklistItemCount?;
    microsoft\.graph\.identitySet completedBy?;
    string? completedDateTime?;
    string? conversationThreadId?;
    microsoft\.graph\.identitySet createdBy?;
    string? createdDateTime?;
    string? dueDateTime?;
    boolean? hasDescription?;
    string? orderHint?;
    decimal? percentComplete?;
    string? planId?;
    microsoft\.graph\.plannerPreviewType previewType?;
    decimal? priority?;
    decimal? referenceCount?;
    string? startDateTime?;
    string title?;
    microsoft\.graph\.plannerAssignedToTaskBoardTaskFormat assignedToTaskBoardFormat?;
    microsoft\.graph\.plannerBucketTaskBoardTaskFormat bucketTaskBoardFormat?;
    microsoft\.graph\.plannerTaskDetails details?;
    microsoft\.graph\.plannerProgressTaskBoardTaskFormat progressTaskBoardFormat?;
};

public type microsoft\.graph\.outlookGeoCoordinates record {
    decimal? accuracy?;
    decimal? altitude?;
    decimal? altitudeAccuracy?;
    decimal? latitude?;
    decimal? longitude?;
};

public type microsoft\.graph\.workbookChartGridlinesFormat record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.workbookChartLineFormat line?;
};

public type microsoft\.graph\.chatMessageFromIdentitySet record {
    *microsoft\.graph\.identitySet;
};

public type microsoft\.graph\.columnTypes "note"|"text"|"choice"|"multichoice"|"number"|"currency"|"dateTime"|"lookup"|"boolean"|"user"|"url"|"calculated"|"location"|"geolocation"|"term"|"multiterm"|"thumbnail"|"approvalStatus"|"unknownFutureValue";

public type microsoft\.graph\.workbookFilterCriteria record {
    string? color?;
    string? criterion1?;
    string? criterion2?;
    string dynamicCriteria?;
    string filterOn?;
    microsoft\.graph\.workbookIcon icon?;
    string operator?;
    microsoft\.graph\.Json values?;
};

public type microsoft\.graph\.openShift record {
    *microsoft\.graph\.changeTrackedEntity;
    microsoft\.graph\.openShiftItem draftOpenShift?;
    boolean? isStagedForDeletion?;
    string? schedulingGroupId?;
    microsoft\.graph\.openShiftItem sharedOpenShift?;
};

public type microsoft\.graph\.chatMessageMentionedIdentitySet record {
    *microsoft\.graph\.identitySet;
    microsoft\.graph\.teamworkConversationIdentity conversation?;
};

public type microsoft\.graph\.workbookIcon record {
    decimal index?;
    string set?;
};

public type microsoft\.graph\.siteArchiveStatus "recentlyArchived"|"fullyArchived"|"reactivating"|"unknownFutureValue";

public type microsoft\.graph\.searchResult record {
    string? onClickTelemetryUrl?;
};

public type microsoft\.graph\.deleted record {
    string? state?;
};

public type microsoft\.graph\.printMultipageLayout "clockwiseFromTopLeft"|"counterclockwiseFromTopLeft"|"counterclockwiseFromTopRight"|"clockwiseFromTopRight"|"counterclockwiseFromBottomLeft"|"clockwiseFromBottomLeft"|"counterclockwiseFromBottomRight"|"clockwiseFromBottomRight"|"unknownFutureValue";

public type microsoft\.graph\.workbookChartTitleFormat record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.workbookChartFill fill?;
    microsoft\.graph\.workbookChartFont font?;
};

public type microsoft\.graph\.timeOffRequest record {
    *microsoft\.graph\.scheduleChangeRequest;
    string? endDateTime?;
    string? startDateTime?;
    string? timeOffReasonId?;
};

public type microsoft\.graph\.deviceActionResult record {
    string? actionName?;
    microsoft\.graph\.actionState actionState?;
    string lastUpdatedDateTime?;
    string startDateTime?;
};

public type microsoft\.graph\.teamGuestSettings record {
    boolean? allowCreateUpdateChannels?;
    boolean? allowDeleteChannels?;
};

public type microsoft\.graph\.websiteType "other"|"home"|"work"|"blog"|"profile";

public type microsoft\.graph\.userScopeTeamsAppInstallation record {
    *microsoft\.graph\.teamsAppInstallation;
    microsoft\.graph\.chat chat?;
};

public type microsoft\.graph\.driveItemSourceApplication "teams"|"yammer"|"sharePoint"|"oneDrive"|"stream"|"powerPoint"|"office"|"loki"|"loop"|"other"|"unknownFutureValue";

# Represents the Queries record for the operation: getChildrenCountInRoot
public type GetChildrenCountInRootQueries record {
    # Filter items by property values
    string \$filter?;
    # Search items by search phrases
    string \$search?;
};

public type microsoft\.graph\.printerCapabilitiesRightMarginsItemsNumber decimal?;

public type microsoft\.graph\.callTranscript record {
    *microsoft\.graph\.entity;
    string? callId?;
    string? content?;
    string? contentCorrelationId?;
    string? createdDateTime?;
    string? endDateTime?;
    string? meetingId?;
    microsoft\.graph\.identitySet meetingOrganizer?;
    string? metadataContent?;
    string? transcriptContentUrl?;
};

public type microsoft\.graph\.onenoteResource record {
    *microsoft\.graph\.onenoteEntityBaseModel;
    string? content?;
    string? contentUrl?;
};

public type microsoft\.graph\.userInsightsSettings record {
    *microsoft\.graph\.entity;
    boolean isEnabled?;
};

public type microsoft\.graph\.keyValue record {
    string? 'key?;
    string? value?;
};

public type microsoft\.graph\.patternedRecurrence record {
    microsoft\.graph\.recurrencePattern pattern?;
    microsoft\.graph\.recurrenceRange range?;
};

public type microsoft\.graph\.deviceManagementExchangeAccessState "none"|"unknown"|"allowed"|"blocked"|"quarantined";

# Represents the Queries record for the operation: getItemsContent
public type GetItemsContentQueries record {
    # Format of the content
    string \$format?;
};

public type microsoft\.graph\.inferenceClassificationType "focused"|"other";

public type microsoft\.graph\.deviceManagementExchangeAccessStateReason "none"|"unknown"|"exchangeGlobalRule"|"exchangeIndividualRule"|"exchangeDeviceRule"|"exchangeUpgrade"|"exchangeMailboxPolicy"|"other"|"compliant"|"notCompliant"|"notEnrolled"|"unknownLocation"|"mfaRequired"|"azureADBlockDueToAccessPolicy"|"compromisedPassword"|"deviceNotKnownWithManagedApp";

public type microsoft\.graph\.servicePlanInfo record {
    string? appliesTo?;
    string? provisioningStatus?;
    string? servicePlanId?;
    string? servicePlanName?;
};

public type microsoft\.graph\.deviceEnrollmentType "unknown"|"userEnrollment"|"deviceEnrollmentManager"|"appleBulkWithUser"|"appleBulkWithoutUser"|"windowsAzureADJoin"|"windowsBulkUserless"|"windowsAutoEnrollment"|"windowsBulkAzureDomainJoin"|"windowsCoManagement"|"windowsAzureADJoinUsingDeviceAuth"|"appleUserEnrollment"|"appleUserEnrollmentWithServiceAccount"|"unknownFutureValue";

public type microsoft\.graph\.workbookChartAreaFormat record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.workbookChartFill fill?;
    microsoft\.graph\.workbookChartFont font?;
};

public type microsoft\.graph\.itemPreviewInfo record {
    string? getUrl?;
    string? postParameters?;
    string? postUrl?;
};

public type microsoft\.graph\.teamsAppAuthorization record {
    string? clientAppId?;
    microsoft\.graph\.teamsAppPermissionSet requiredPermissionSet?;
};

# Represents the Headers record for the operation: deleteRoot
public type DeleteRootHeaders record {
    # ETag
    string If\-Match?;
};

public type microsoft\.graph\.itemActivityStat record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.itemActionStat access?;
    microsoft\.graph\.itemActionStat create?;
    microsoft\.graph\.itemActionStat delete?;
    microsoft\.graph\.itemActionStat edit?;
    string? endDateTime?;
    microsoft\.graph\.incompleteData incompleteData?;
    boolean? isTrending?;
    microsoft\.graph\.itemActionStat move?;
    string? startDateTime?;
    microsoft\.graph\.itemActivity[] activities?;
};

public type microsoft\.graph\.site record {
    *microsoft\.graph\.baseItem;
    string? displayName?;
    microsoft\.graph\.publicError 'error?;
    boolean? isPersonalSite?;
    microsoft\.graph\.root root?;
    microsoft\.graph\.sharepointIds sharepointIds?;
    microsoft\.graph\.siteCollection siteCollection?;
    microsoft\.graph\.itemAnalytics analytics?;
    microsoft\.graph\.columnDefinition[] columns?;
    microsoft\.graph\.contentType[] contentTypes?;
    microsoft\.graph\.drive drive?;
    microsoft\.graph\.drive[] drives?;
    microsoft\.graph\.columnDefinition[] externalColumns?;
    microsoft\.graph\.baseItem[] items?;
    microsoft\.graph\.list[] lists?;
    microsoft\.graph\.onenote onenote?;
    microsoft\.graph\.richLongRunningOperation[] operations?;
    microsoft\.graph\.baseSitePage[] pages?;
    microsoft\.graph\.permission[] permissions?;
    microsoft\.graph\.site[] sites?;
    microsoft\.graph\.termStore\.store termStore?;
    microsoft\.graph\.termStore\.store[] termStores?;
};

public type microsoft\.graph\.groupSetting record {
    *microsoft\.graph\.entity;
    string? displayName?;
    string? templateId?;
    microsoft\.graph\.settingValue[] values?;
};

public type microsoft\.graph\.workbookChartLegend record {
    *microsoft\.graph\.entity;
    boolean? overlay?;
    string? position?;
    boolean visible?;
    microsoft\.graph\.workbookChartLegendFormat format?;
};

public type microsoft\.graph\.mailFolder record {
    *microsoft\.graph\.entity;
    decimal? childFolderCount?;
    string? displayName?;
    boolean? isHidden?;
    string? parentFolderId?;
    decimal? totalItemCount?;
    decimal? unreadItemCount?;
    microsoft\.graph\.mailFolder[] childFolders?;
    microsoft\.graph\.messageRule[] messageRules?;
    microsoft\.graph\.message[] messages?;
    microsoft\.graph\.multiValueLegacyExtendedProperty[] multiValueExtendedProperties?;
    microsoft\.graph\.singleValueLegacyExtendedProperty[] singleValueExtendedProperties?;
};

# Represents the Headers record for the operation: deleteChildrenContentByPath
public type DeleteChildrenContentByPathHeaders record {
    # ETag
    string If\-Match?;
};

public type microsoft\.graph\.teamworkBot record {
    *microsoft\.graph\.entity;
};

public type microsoft\.graph\.currencyColumn record {
    string? locale?;
};

public type microsoft\.graph\.teamsAppResourceSpecificPermissionType "delegated"|"application"|"unknownFutureValue";

public type microsoft\.graph\.attendanceInterval record {
    decimal? durationInSeconds?;
    string? joinDateTime?;
    string? leaveDateTime?;
};

public type microsoft\.graph\.printerCapabilitiesPagesPerSheetItemsNumber decimal?;

public type microsoft\.graph\.chat record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.chatType chatType?;
    string? createdDateTime?;
    boolean? isHiddenForAllMembers?;
    string? lastUpdatedDateTime?;
    microsoft\.graph\.teamworkOnlineMeetingInfo onlineMeetingInfo?;
    string? tenantId?;
    string? topic?;
    microsoft\.graph\.chatViewpoint viewpoint?;
    string? webUrl?;
    microsoft\.graph\.teamsAppInstallation[] installedApps?;
    microsoft\.graph\.chatMessageInfo lastMessagePreview?;
    microsoft\.graph\.conversationMember[] members?;
    microsoft\.graph\.chatMessage[] messages?;
    microsoft\.graph\.resourceSpecificPermissionGrant[] permissionGrants?;
    microsoft\.graph\.pinnedChatMessageInfo[] pinnedMessages?;
    microsoft\.graph\.teamsTab[] tabs?;
};

public type microsoft\.graph\.driveItem record {
    *microsoft\.graph\.baseItem;
    microsoft\.graph\.audio audio?;
    microsoft\.graph\.bundle bundle?;
    string? content?;
    string? cTag?;
    microsoft\.graph\.deleted deleted?;
    microsoft\.graph\.file file?;
    microsoft\.graph\.fileSystemInfo fileSystemInfo?;
    microsoft\.graph\.folder folder?;
    microsoft\.graph\.image image?;
    microsoft\.graph\.geoCoordinates location?;
    microsoft\.graph\.malware malware?;
    microsoft\.graph\.package package?;
    microsoft\.graph\.pendingOperations pendingOperations?;
    microsoft\.graph\.photo photo?;
    microsoft\.graph\.publicationFacet publication?;
    microsoft\.graph\.remoteItem remoteItem?;
    microsoft\.graph\.root root?;
    microsoft\.graph\.searchResult searchResult?;
    microsoft\.graph\.shared shared?;
    microsoft\.graph\.sharepointIds sharepointIds?;
    decimal? size?;
    microsoft\.graph\.specialFolder specialFolder?;
    microsoft\.graph\.video video?;
    string? webDavUrl?;
    microsoft\.graph\.itemAnalytics analytics?;
    microsoft\.graph\.driveItem[] children?;
    microsoft\.graph\.listItem listItem?;
    microsoft\.graph\.permission[] permissions?;
    microsoft\.graph\.itemRetentionLabel retentionLabel?;
    microsoft\.graph\.subscription[] subscriptions?;
    microsoft\.graph\.thumbnailSet[] thumbnails?;
    microsoft\.graph\.driveItemVersion[] versions?;
    microsoft\.graph\.workbook workbook?;
};

public type microsoft\.graph\.chatMessageMention record {
    decimal? id?;
    microsoft\.graph\.chatMessageMentionedIdentitySet mentioned?;
    string? mentionText?;
};

public type microsoft\.graph\.outOfOfficeSettings record {
    boolean? isOutOfOffice?;
    string? message?;
};

public type microsoft\.graph\.userSolutionRoot record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.workingTimeSchedule workingTimeSchedule?;
};

public type microsoft\.graph\.onPremisesProvisioningError record {
    string? category?;
    string? occurredDateTime?;
    string? propertyCausingError?;
    string? value?;
};

public type microsoft\.graph\.displayNameLocalization record {
    string? displayName?;
    string? languageTag?;
};

public type microsoft\.graph\.attachmentBase record {
    *microsoft\.graph\.entity;
    string? contentType?;
    string? lastModifiedDateTime?;
    string? name?;
    decimal size?;
};

public type microsoft\.graph\.pageLayoutType "microsoftReserved"|"article"|"home"|"unknownFutureValue";

public type microsoft\.graph\.temporaryAccessPassAuthenticationMethod record {
    *microsoft\.graph\.authenticationMethod;
    string? createdDateTime?;
    boolean? isUsable?;
    boolean? isUsableOnce?;
    decimal? lifetimeInMinutes?;
    string? methodUsabilityReason?;
    string? startDateTime?;
    string? temporaryAccessPass?;
};

public type microsoft\.graph\.termStore\.set record {
    *microsoft\.graph\.entity;
    string? createdDateTime?;
    string? description?;
    microsoft\.graph\.termStore\.localizedName[] localizedNames?;
    microsoft\.graph\.keyValue[] properties?;
    microsoft\.graph\.termStore\.term[] children?;
    microsoft\.graph\.termStore\.group parentGroup?;
    microsoft\.graph\.termStore\.relation[] relations?;
    microsoft\.graph\.termStore\.term[] terms?;
};

public type microsoft\.graph\.identitySet record {
    microsoft\.graph\.identity application?;
    microsoft\.graph\.identity device?;
    microsoft\.graph\.identity user?;
};

public type microsoft\.graph\.messageRulePredicates record {
    string[] bodyContains?;
    string[] bodyOrSubjectContains?;
    string[] categories?;
    microsoft\.graph\.recipient[] fromAddresses?;
    boolean? hasAttachments?;
    string[] headerContains?;
    microsoft\.graph\.importance importance?;
    boolean? isApprovalRequest?;
    boolean? isAutomaticForward?;
    boolean? isAutomaticReply?;
    boolean? isEncrypted?;
    boolean? isMeetingRequest?;
    boolean? isMeetingResponse?;
    boolean? isNonDeliveryReport?;
    boolean? isPermissionControlled?;
    boolean? isReadReceipt?;
    boolean? isSigned?;
    boolean? isVoicemail?;
    microsoft\.graph\.messageActionFlag messageActionFlag?;
    boolean? notSentToMe?;
    string[] recipientContains?;
    string[] senderContains?;
    microsoft\.graph\.sensitivity sensitivity?;
    boolean? sentCcMe?;
    boolean? sentOnlyToMe?;
    microsoft\.graph\.recipient[] sentToAddresses?;
    boolean? sentToMe?;
    boolean? sentToOrCcMe?;
    string[] subjectContains?;
    microsoft\.graph\.sizeRange withinSizeRange?;
};

public type microsoft\.graph\.attendanceRecord record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.attendanceInterval[] attendanceIntervals?;
    string? emailAddress?;
    microsoft\.graph\.virtualEventExternalRegistrationInformation externalRegistrationInformation?;
    microsoft\.graph\.identity identity?;
    string? registrationId?;
    string? role?;
    decimal? totalAttendanceInSeconds?;
};

public type microsoft\.graph\.windowsMalwareExecutionState "unknown"|"blocked"|"allowed"|"running"|"notRunning";

public type microsoft\.graph\.wellknownListName "none"|"defaultList"|"flaggedEmails"|"unknownFutureValue";

# Represents the Headers record for the operation: deleteItem
public type DeleteItemHeaders record {
    # ETag
    string If\-Match?;
};

public type microsoft\.graph\.sharePointIdentitySet record {
    *microsoft\.graph\.identitySet;
    microsoft\.graph\.identity group?;
    microsoft\.graph\.sharePointIdentity siteGroup?;
    microsoft\.graph\.sharePointIdentity siteUser?;
};

public type root_microsoft_graph_preview_body record {
    string? page?;
    decimal? zoom?;
};

public type microsoft\.graph\.employeeOrgData record {
    string? costCenter?;
    string? division?;
};

public type microsoft\.graph\.printerLocation record {
    decimal? altitudeInMeters?;
    string? building?;
    string? city?;
    string? countryOrRegion?;
    string? floor?;
    string? floorDescription?;
    decimal? latitude?;
    decimal? longitude?;
    string[] organization?;
    string? postalCode?;
    string? roomDescription?;
    string? roomName?;
    string? site?;
    string? stateOrProvince?;
    string? streetAddress?;
    string[] subdivision?;
    string[] subunit?;
};

# Provides a set of configurations for controlling the behaviours when communicating with a remote HTTP endpoint.
@display {label: "Connection Config"}
public type ConnectionConfig record {|
    # Configurations related to client authentication
    http:BearerTokenConfig|OAuth2RefreshTokenGrantConfig auth;
    # The HTTP version understood by the client
    http:HttpVersion httpVersion = http:HTTP_2_0;
    # Configurations related to HTTP/1.x protocol
    http:ClientHttp1Settings http1Settings = {};
    # Configurations related to HTTP/2 protocol
    http:ClientHttp2Settings http2Settings = {};
    # The maximum time to wait (in seconds) for a response before closing the connection
    decimal timeout = 30;
    # The choice of setting `forwarded`/`x-forwarded` header
    string forwarded = "disable";
    # Configurations associated with Redirection
    http:FollowRedirects followRedirects?;
    # Configurations associated with request pooling
    http:PoolConfiguration poolConfig?;
    # HTTP caching related configurations
    http:CacheConfig cache = {};
    # Specifies the way of handling compression (`accept-encoding`) header
    http:Compression compression = http:COMPRESSION_AUTO;
    # Configurations associated with the behaviour of the Circuit Breaker
    http:CircuitBreakerConfig circuitBreaker?;
    # Configurations associated with retrying
    http:RetryConfig retryConfig?;
    # Configurations associated with cookies
    http:CookieConfig cookieConfig?;
    # Configurations associated with inbound response size limits
    http:ResponseLimitConfigs responseLimits = {};
    # SSL/TLS-related options
    http:ClientSecureSocket secureSocket?;
    # Proxy server related options
    http:ProxyConfig proxy?;
    # Provides settings related to client socket configuration
    http:ClientSocketConfig socketConfig = {};
    # Enables the inbound payload validation functionality which provided by the constraint package. Enabled by default
    boolean validation = true;
    # Enables relaxed data binding on the client side. When enabled, `nil` values are treated as optional, 
    # and absent fields are handled as `nilable` types. Enabled by default.
    boolean laxDataBinding = true;
|};

public type microsoft\.graph\.termStore\.group record {
    *microsoft\.graph\.entity;
    string? createdDateTime?;
    string? description?;
    string? displayName?;
    string? parentSiteId?;
    microsoft\.graph\.termStore\.termGroupScope scope?;
    microsoft\.graph\.termStore\.set[] sets?;
};

public type microsoft\.graph\.plannerAssignedToTaskBoardTaskFormat record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.plannerOrderHintsByAssignee orderHintsByAssignee?;
    string? unassignedOrderHint?;
};

public type microsoft\.graph\.deviceRegistrationState "notRegistered"|"registered"|"revoked"|"keyConflict"|"approvalPending"|"certificateReset"|"notRegisteredPendingEnrollment"|"unknown";

public type microsoft\.graph\.calendarColor "auto"|"lightBlue"|"lightGreen"|"lightOrange"|"lightGray"|"lightYellow"|"lightTeal"|"lightPink"|"lightBrown"|"lightRed"|"maxColor";

public type microsoft\.graph\.windowsProtectionState record {
    *microsoft\.graph\.entity;
    string? antiMalwareVersion?;
    microsoft\.graph\.windowsDeviceHealthState deviceState?;
    string? engineVersion?;
    boolean? fullScanOverdue?;
    boolean? fullScanRequired?;
    boolean? isVirtualMachine?;
    string? lastFullScanDateTime?;
    string? lastFullScanSignatureVersion?;
    string? lastQuickScanDateTime?;
    string? lastQuickScanSignatureVersion?;
    string? lastReportedDateTime?;
    boolean? malwareProtectionEnabled?;
    boolean? networkInspectionSystemEnabled?;
    microsoft\.graph\.windowsDefenderProductStatus productStatus?;
    boolean? quickScanOverdue?;
    boolean? realTimeProtectionEnabled?;
    boolean? rebootRequired?;
    boolean? signatureUpdateOverdue?;
    string? signatureVersion?;
    boolean? tamperProtectionEnabled?;
    microsoft\.graph\.windowsDeviceMalwareState[] detectedMalwareState?;
};

public type microsoft\.graph\.serviceStorageQuotaBreakdown record {
    *microsoft\.graph\.storageQuotaBreakdown;
};

public type microsoft\.graph\.teamsAppInstallation record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.teamsAppPermissionSet consentedPermissionSet?;
    microsoft\.graph\.teamsApp teamsApp?;
    microsoft\.graph\.teamsAppDefinition teamsAppDefinition?;
};

public type microsoft\.graph\.authenticationMethodSignInState "notSupported"|"notAllowedByPolicy"|"notEnabled"|"phoneNumberNotUnique"|"ready"|"notConfigured"|"unknownFutureValue";

public type microsoft\.graph\.teamMemberSettings record {
    boolean? allowAddRemoveApps?;
    boolean? allowCreatePrivateChannels?;
    boolean? allowCreateUpdateChannels?;
    boolean? allowCreateUpdateRemoveConnectors?;
    boolean? allowCreateUpdateRemoveTabs?;
    boolean? allowDeleteChannels?;
};

public type microsoft\.graph\.image record {
    decimal? height?;
    decimal? width?;
};

public type microsoft\.graph\.workbookTableColumn record {
    *microsoft\.graph\.entity;
    decimal index?;
    string? name?;
    microsoft\.graph\.Json values?;
    microsoft\.graph\.workbookFilter filter?;
};

public type microsoft\.graph\.teamSummary record {
    decimal? guestsCount?;
    decimal? membersCount?;
    decimal? ownersCount?;
};

public type microsoft\.graph\.teamsApp record {
    *microsoft\.graph\.entity;
    string? displayName?;
    microsoft\.graph\.teamsAppDistributionMethod distributionMethod?;
    string? externalId?;
    microsoft\.graph\.teamsAppDefinition[] appDefinitions?;
};

public type microsoft\.graph\.managedAppRegistration record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.mobileAppIdentifier appIdentifier?;
    string? applicationVersion?;
    string createdDateTime?;
    string? deviceName?;
    string? deviceTag?;
    string? deviceType?;
    microsoft\.graph\.managedAppFlaggedReason[] flaggedReasons?;
    string lastSyncDateTime?;
    string? managementSdkVersion?;
    string? platformVersion?;
    string? userId?;
    string? version?;
    microsoft\.graph\.managedAppPolicy[] appliedPolicies?;
    microsoft\.graph\.managedAppPolicy[] intendedPolicies?;
    microsoft\.graph\.managedAppOperation[] operations?;
};

public type microsoft\.graph\.teamVisibilityType "private"|"public"|"hiddenMembership"|"unknownFutureValue";

public type microsoft\.graph\.attachmentSession record {
    *microsoft\.graph\.entity;
    string? content?;
    string? expirationDateTime?;
    string[] nextExpectedRanges?;
};

public type microsoft\.graph\.changeTrackedEntity record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.identitySet createdBy?;
    string? createdDateTime?;
    microsoft\.graph\.identitySet lastModifiedBy?;
    string? lastModifiedDateTime?;
};

public type microsoft\.graph\.scheduleChangeRequest record {
    *microsoft\.graph\.changeTrackedEntity;
    microsoft\.graph\.scheduleChangeRequestActor assignedTo?;
    string? managerActionDateTime?;
    string? managerActionMessage?;
    string? managerUserId?;
    string? senderDateTime?;
    string? senderMessage?;
    string? senderUserId?;
    microsoft\.graph\.scheduleChangeState state?;
};

public type microsoft\.graph\.windowsMalwareThreatState "active"|"actionFailed"|"manualStepsRequired"|"fullScanRequired"|"rebootRequired"|"remediatedWithNonCriticalFailures"|"quarantined"|"removed"|"cleaned"|"allowed"|"noStatusCleared";

public type microsoft\.graph\.workbookApplication record {
    *microsoft\.graph\.entity;
    string calculationMode?;
};

public type microsoft\.graph\.insightIdentity record {
    string? address?;
    string? displayName?;
    string? id?;
};

public type microsoft\.graph\.conversationThread record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.recipient[] ccRecipients?;
    boolean hasAttachments?;
    boolean isLocked?;
    string lastDeliveredDateTime?;
    string preview?;
    string topic?;
    microsoft\.graph\.recipient[] toRecipients?;
    string[] uniqueSenders?;
    microsoft\.graph\.post[] posts?;
};

public type microsoft\.graph\.deviceCompliancePolicyState record {
    *microsoft\.graph\.entity;
    string? displayName?;
    microsoft\.graph\.policyPlatformType platformType?;
    decimal settingCount?;
    microsoft\.graph\.deviceCompliancePolicySettingState[] settingStates?;
    microsoft\.graph\.complianceStatus state?;
    decimal version?;
};

public type microsoft\.graph\.personOrGroupColumn record {
    boolean? allowMultipleSelection?;
    string? chooseFromType?;
    string? displayAs?;
};

public type microsoft\.graph\.termStore\.relationType "pin"|"reuse"|"unknownFutureValue";

public type microsoft\.graph\.phone record {
    string? language?;
    string? number?;
    string? region?;
    microsoft\.graph\.phoneType 'type?;
};

# Represents the Headers record for the operation: deleteDrive
public type DeleteDriveHeaders record {
    # ETag
    string If\-Match?;
};

public type microsoft\.graph\.recurrenceRangeType "endDate"|"noEnd"|"numbered";

public type microsoft\.graph\.customSecurityAttributeValue record {
};

public type microsoft\.graph\.printColorMode "blackAndWhite"|"grayscale"|"color"|"auto"|"unknownFutureValue";

public type microsoft\.graph\.usageDetails record {
    string? lastAccessedDateTime?;
    string? lastModifiedDateTime?;
};

public type microsoft\.graph\.chatMessagePolicyViolationDlpActionTypes "none"|"notifySender"|"blockAccess"|"blockAccessExternal";

# Represents the Queries record for the operation: recent
public type RecentQueries record {
    # Skip the first n items
    int \$skip?;
    # Show only the first n items
    int \$top?;
    # Filter items by property values
    string \$filter?;
    # Search items by search phrases
    string \$search?;
    # Order items by property values
    string[] \$orderby?;
    # Expand related entities
    string[] \$expand?;
    # Include count of items
    boolean \$count?;
    # Select properties to be returned
    string[] \$select?;
};

public type microsoft\.graph\.shiftItem record {
    *microsoft\.graph\.scheduleEntity;
    microsoft\.graph\.shiftActivity[] activities?;
    string? displayName?;
    string? notes?;
};

public type microsoft\.graph\.teamsAppResourceSpecificPermission record {
    microsoft\.graph\.teamsAppResourceSpecificPermissionType permissionType?;
    string? permissionValue?;
};

public type microsoft\.graph\.teamFunSettings record {
    boolean? allowCustomMemes?;
    boolean? allowGiphy?;
    boolean? allowStickersAndMemes?;
    microsoft\.graph\.giphyRatingType giphyContentRating?;
};

public type microsoft\.graph\.channelMembershipType "standard"|"private"|"unknownFutureValue"|"shared";

public type driveItemid_microsoft_graph_preview_body record {
    string? page?;
    decimal? zoom?;
};

public type microsoft\.graph\.workbookPivotTable record {
    *microsoft\.graph\.entity;
    string? name?;
    microsoft\.graph\.workbookWorksheet worksheet?;
};

public type microsoft\.graph\.internetMessageHeader record {
    string? name?;
    string? value?;
};

public type microsoft\.graph\.notebook record {
    *microsoft\.graph\.onenoteEntityHierarchyModel;
    boolean? isDefault?;
    boolean? isShared?;
    microsoft\.graph\.notebookLinks links?;
    string? sectionGroupsUrl?;
    string? sectionsUrl?;
    microsoft\.graph\.onenoteUserRole userRole?;
    microsoft\.graph\.sectionGroup[] sectionGroups?;
    microsoft\.graph\.onenoteSection[] sections?;
};

public type microsoft\.graph\.unifiedStorageQuota record {
    *microsoft\.graph\.entity;
    decimal? deleted?;
    string? manageWebUrl?;
    decimal? remaining?;
    string? state?;
    decimal? total?;
    decimal? used?;
    microsoft\.graph\.serviceStorageQuotaBreakdown[] services?;
};

public type microsoft\.graph\.lobbyBypassSettings record {
    boolean? isDialInBypassEnabled?;
    microsoft\.graph\.lobbyBypassScope scope?;
};

public type microsoft\.graph\.cloudClipboardItemPayload record {
    string content?;
    string formatName?;
};

public type microsoft\.graph\.timeRange record {
    string? endTime?;
    string? startTime?;
};

public type microsoft\.graph\.printerStatus record {
    string? description?;
    microsoft\.graph\.printerProcessingStateDetail[] details?;
    microsoft\.graph\.printerProcessingState state?;
};

public type microsoft\.graph\.baseItem record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.identitySet createdBy?;
    string createdDateTime?;
    string? description?;
    string? eTag?;
    microsoft\.graph\.identitySet lastModifiedBy?;
    string lastModifiedDateTime?;
    string? name?;
    microsoft\.graph\.itemReference parentReference?;
    string? webUrl?;
    microsoft\.graph\.user createdByUser?;
    microsoft\.graph\.user lastModifiedByUser?;
};

public type microsoft\.graph\.linkedResource record {
    *microsoft\.graph\.entity;
    string? applicationName?;
    string? displayName?;
    string? externalId?;
    string? webUrl?;
};

# Represents the Queries record for the operation: getItemCount
public type GetItemCountQueries record {
    # Filter items by property values
    string \$filter?;
    # Search items by search phrases
    string \$search?;
};

public type microsoft\.graph\.package record {
    string? 'type?;
};

public type microsoft\.graph\.user record {
    *microsoft\.graph\.directoryObject;
    string? aboutMe?;
    boolean? accountEnabled?;
    string? ageGroup?;
    microsoft\.graph\.assignedLicense[] assignedLicenses?;
    microsoft\.graph\.assignedPlan[] assignedPlans?;
    microsoft\.graph\.authorizationInfo authorizationInfo?;
    string birthday?;
    string[] businessPhones?;
    string? city?;
    string? companyName?;
    string? consentProvidedForMinor?;
    string? country?;
    string? createdDateTime?;
    string? creationType?;
    microsoft\.graph\.customSecurityAttributeValue customSecurityAttributes?;
    string? department?;
    decimal deviceEnrollmentLimit?;
    string? displayName?;
    string? employeeHireDate?;
    string? employeeId?;
    string? employeeLeaveDateTime?;
    microsoft\.graph\.employeeOrgData employeeOrgData?;
    string? employeeType?;
    string? externalUserState?;
    string? externalUserStateChangeDateTime?;
    string? faxNumber?;
    string? givenName?;
    string hireDate?;
    microsoft\.graph\.objectIdentity[] identities?;
    string[] imAddresses?;
    string[] interests?;
    boolean? isManagementRestricted?;
    boolean? isResourceAccount?;
    string? jobTitle?;
    string? lastPasswordChangeDateTime?;
    string? legalAgeGroupClassification?;
    microsoft\.graph\.licenseAssignmentState[] licenseAssignmentStates?;
    string? mail?;
    microsoft\.graph\.mailboxSettings mailboxSettings?;
    string? mailNickname?;
    string? mobilePhone?;
    string? mySite?;
    string? officeLocation?;
    string? onPremisesDistinguishedName?;
    string? onPremisesDomainName?;
    microsoft\.graph\.onPremisesExtensionAttributes onPremisesExtensionAttributes?;
    string? onPremisesImmutableId?;
    string? onPremisesLastSyncDateTime?;
    microsoft\.graph\.onPremisesProvisioningError[] onPremisesProvisioningErrors?;
    string? onPremisesSamAccountName?;
    string? onPremisesSecurityIdentifier?;
    boolean? onPremisesSyncEnabled?;
    string? onPremisesUserPrincipalName?;
    string[] otherMails?;
    string? passwordPolicies?;
    microsoft\.graph\.passwordProfile passwordProfile?;
    string[] pastProjects?;
    string? postalCode?;
    string? preferredDataLocation?;
    string? preferredLanguage?;
    string? preferredName?;
    microsoft\.graph\.userPrint print?;
    microsoft\.graph\.provisionedPlan[] provisionedPlans?;
    string[] proxyAddresses?;
    string[] responsibilities?;
    string[] schools?;
    string? securityIdentifier?;
    microsoft\.graph\.serviceProvisioningError[] serviceProvisioningErrors?;
    boolean? showInAddressList?;
    microsoft\.graph\.signInActivity signInActivity?;
    string? signInSessionsValidFromDateTime?;
    string[] skills?;
    string? state?;
    string? streetAddress?;
    string? surname?;
    string? usageLocation?;
    string? userPrincipalName?;
    string? userType?;
    microsoft\.graph\.userActivity[] activities?;
    microsoft\.graph\.agreementAcceptance[] agreementAcceptances?;
    microsoft\.graph\.appRoleAssignment[] appRoleAssignments?;
    microsoft\.graph\.authentication authentication?;
    microsoft\.graph\.calendar calendar?;
    microsoft\.graph\.calendarGroup[] calendarGroups?;
    microsoft\.graph\.calendar[] calendars?;
    microsoft\.graph\.event[] calendarView?;
    microsoft\.graph\.chat[] chats?;
    microsoft\.graph\.cloudClipboardRoot cloudClipboard?;
    microsoft\.graph\.contactFolder[] contactFolders?;
    microsoft\.graph\.contact[] contacts?;
    microsoft\.graph\.directoryObject[] createdObjects?;
    microsoft\.graph\.userDataSecurityAndGovernance dataSecurityAndGovernance?;
    microsoft\.graph\.deviceManagementTroubleshootingEvent[] deviceManagementTroubleshootingEvents?;
    microsoft\.graph\.directoryObject[] directReports?;
    microsoft\.graph\.drive drive?;
    microsoft\.graph\.drive[] drives?;
    microsoft\.graph\.employeeExperienceUser employeeExperience?;
    microsoft\.graph\.event[] events?;
    microsoft\.graph\.extension[] extensions?;
    microsoft\.graph\.site[] followedSites?;
    microsoft\.graph\.inferenceClassification inferenceClassification?;
    microsoft\.graph\.itemInsights insights?;
    microsoft\.graph\.team[] joinedTeams?;
    microsoft\.graph\.licenseDetails[] licenseDetails?;
    microsoft\.graph\.mailFolder[] mailFolders?;
    microsoft\.graph\.managedAppRegistration[] managedAppRegistrations?;
    microsoft\.graph\.managedDevice[] managedDevices?;
    microsoft\.graph\.directoryObject manager?;
    microsoft\.graph\.directoryObject[] memberOf?;
    microsoft\.graph\.message[] messages?;
    microsoft\.graph\.oAuth2PermissionGrant[] oauth2PermissionGrants?;
    microsoft\.graph\.onenote onenote?;
    microsoft\.graph\.onlineMeeting[] onlineMeetings?;
    microsoft\.graph\.outlookUser outlook?;
    microsoft\.graph\.directoryObject[] ownedDevices?;
    microsoft\.graph\.directoryObject[] ownedObjects?;
    microsoft\.graph\.person[] people?;
    microsoft\.graph\.resourceSpecificPermissionGrant[] permissionGrants?;
    microsoft\.graph\.profilePhoto photo?;
    microsoft\.graph\.profilePhoto[] photos?;
    microsoft\.graph\.plannerUser planner?;
    microsoft\.graph\.presence presence?;
    microsoft\.graph\.directoryObject[] registeredDevices?;
    microsoft\.graph\.scopedRoleMembership[] scopedRoleMemberOf?;
    microsoft\.graph\.userSettings settings?;
    microsoft\.graph\.userSolutionRoot solutions?;
    microsoft\.graph\.directoryObject[] sponsors?;
    microsoft\.graph\.userTeamwork teamwork?;
    microsoft\.graph\.todo todo?;
    microsoft\.graph\.directoryObject[] transitiveMemberOf?;
};

public type microsoft\.graph\.richLongRunningOperation record {
    *microsoft\.graph\.longRunningOperation;
    microsoft\.graph\.publicError 'error?;
    decimal? percentageComplete?;
    string? resourceId?;
    string? 'type?;
};

public type microsoft\.graph\.sharedWithChannelTeamInfo record {
    *microsoft\.graph\.teamInfo;
    boolean? isHostTeam?;
    microsoft\.graph\.conversationMember[] allowedMembers?;
};

public type microsoft\.graph\.workbookChartFont record {
    *microsoft\.graph\.entity;
    boolean? bold?;
    string? color?;
    boolean? italic?;
    string? name?;
    decimal? size?;
    string? underline?;
};

# Represents the Headers record for the operation: deleteChildrenContent
public type DeleteChildrenContentHeaders record {
    # ETag
    string If\-Match?;
};

public type microsoft\.graph\.visualInfo record {
    microsoft\.graph\.imageInfo attribution?;
    string? backgroundColor?;
    microsoft\.graph\.Json content?;
    string? description?;
    string displayText?;
};

public type microsoft\.graph\.passwordAuthenticationMethod record {
    *microsoft\.graph\.authenticationMethod;
    string? createdDateTime?;
    string? password?;
};

public type microsoft\.graph\.workbookChartPointFormat record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.workbookChartFill fill?;
};

public type microsoft\.graph\.deviceConfigurationState record {
    *microsoft\.graph\.entity;
    string? displayName?;
    microsoft\.graph\.policyPlatformType platformType?;
    decimal settingCount?;
    microsoft\.graph\.deviceConfigurationSettingState[] settingStates?;
    microsoft\.graph\.complianceStatus state?;
    decimal version?;
};

public type microsoft\.graph\.authenticationPhoneType "mobile"|"alternateMobile"|"office"|"unknownFutureValue";

public type microsoft\.graph\.geoCoordinates record {
    decimal? altitude?;
    decimal? latitude?;
    decimal? longitude?;
};

public type microsoft\.graph\.recipient record {
    microsoft\.graph\.emailAddress emailAddress?;
};

public type microsoft\.graph\.schedule record {
    *microsoft\.graph\.entity;
    boolean? enabled?;
    boolean? isActivitiesIncludedWhenCopyingShiftsEnabled?;
    boolean? offerShiftRequestsEnabled?;
    boolean? openShiftsEnabled?;
    microsoft\.graph\.operationStatus provisionStatus?;
    string? provisionStatusCode?;
    microsoft\.graph\.dayOfWeek startDayOfWeek?;
    boolean? swapShiftsRequestsEnabled?;
    boolean? timeClockEnabled?;
    microsoft\.graph\.timeClockSettings timeClockSettings?;
    boolean? timeOffRequestsEnabled?;
    string? timeZone?;
    string[] workforceIntegrationIds?;
    microsoft\.graph\.dayNote[] dayNotes?;
    microsoft\.graph\.offerShiftRequest[] offerShiftRequests?;
    microsoft\.graph\.openShiftChangeRequest[] openShiftChangeRequests?;
    microsoft\.graph\.openShift[] openShifts?;
    microsoft\.graph\.schedulingGroup[] schedulingGroups?;
    microsoft\.graph\.shift[] shifts?;
    microsoft\.graph\.swapShiftsChangeRequest[] swapShiftsChangeRequests?;
    microsoft\.graph\.timeCard[] timeCards?;
    microsoft\.graph\.timeOffReason[] timeOffReasons?;
    microsoft\.graph\.timeOffRequest[] timeOffRequests?;
    microsoft\.graph\.timeOff[] timesOff?;
};

public type microsoft\.graph\.columnDefinition record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.booleanColumn 'boolean?;
    microsoft\.graph\.calculatedColumn calculated?;
    microsoft\.graph\.choiceColumn choice?;
    string? columnGroup?;
    microsoft\.graph\.contentApprovalStatusColumn contentApprovalStatus?;
    microsoft\.graph\.currencyColumn currency?;
    microsoft\.graph\.dateTimeColumn dateTime?;
    microsoft\.graph\.defaultColumnValue defaultValue?;
    string? description?;
    string? displayName?;
    boolean? enforceUniqueValues?;
    microsoft\.graph\.geolocationColumn geolocation?;
    boolean? hidden?;
    microsoft\.graph\.hyperlinkOrPictureColumn hyperlinkOrPicture?;
    boolean? indexed?;
    boolean? isDeletable?;
    boolean? isReorderable?;
    boolean? isSealed?;
    microsoft\.graph\.lookupColumn lookup?;
    string? name?;
    microsoft\.graph\.numberColumn number?;
    microsoft\.graph\.personOrGroupColumn personOrGroup?;
    boolean? propagateChanges?;
    boolean? readOnly?;
    boolean? required?;
    microsoft\.graph\.contentTypeInfo sourceContentType?;
    microsoft\.graph\.termColumn term?;
    microsoft\.graph\.textColumn text?;
    microsoft\.graph\.thumbnailColumn thumbnail?;
    microsoft\.graph\.columnTypes 'type?;
    microsoft\.graph\.columnValidation validation?;
    microsoft\.graph\.columnDefinition sourceColumn?;
};

public type microsoft\.graph\.teamMessagingSettings record {
    boolean? allowChannelMentions?;
    boolean? allowOwnerDeleteMessages?;
    boolean? allowTeamMentions?;
    boolean? allowUserDeleteMessages?;
    boolean? allowUserEditMessages?;
};

public type Collection\ of\ driveItem record {
    microsoft\.graph\.driveItem[] value?;
    string? \@odata\.nextLink?;
};

public type microsoft\.graph\.sharingInvitation record {
    string? email?;
    microsoft\.graph\.identitySet invitedBy?;
    string? redeemedBy?;
    boolean? signInRequired?;
};

public type driveItemid_microsoft_graph_invite_body record {
    boolean? requireSignIn = false;
    string[] roles?;
    boolean? sendInvitation = false;
    string? message?;
    microsoft\.graph\.driveRecipient[] recipients?;
    boolean? retainInheritedPermissions = false;
    string? expirationDateTime?;
    string? password?;
};

public type microsoft\.graph\.officeGraphInsights record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.sharedInsight[] shared?;
    microsoft\.graph\.trending[] trending?;
    microsoft\.graph\.usedInsight[] used?;
};

public type microsoft\.graph\.timeCardBreak record {
    string? breakId?;
    microsoft\.graph\.timeCardEvent end?;
    microsoft\.graph\.itemBody notes?;
    microsoft\.graph\.timeCardEvent 'start?;
};

public type microsoft\.graph\.workbookFunctions record {
    *microsoft\.graph\.entity;
};

public type microsoft\.graph\.timeOffItem record {
    *microsoft\.graph\.scheduleEntity;
    string? timeOffReasonId?;
};

public type microsoft\.graph\.platformCredentialAuthenticationMethod record {
    *microsoft\.graph\.authenticationMethod;
    string? createdDateTime?;
    string? displayName?;
    microsoft\.graph\.authenticationMethodKeyStrength keyStrength?;
    microsoft\.graph\.authenticationMethodPlatform platform?;
    microsoft\.graph\.device device?;
};

# Represents the Queries record for the operation: getChildrenContentInRoot
public type GetChildrenContentInRootQueries record {
    # Format of the content
    string \$format?;
};

# Represents the Queries record for the operation: getChildren
public type GetChildrenQueries record {
    # Expand related entities
    string[] \$expand?;
    # Select properties to be returned
    string[] \$select?;
};

public type microsoft\.graph\.sensitivityLabel record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.labelActionSource actionSource?;
    string? autoTooltip?;
    string? description?;
    string? displayName?;
    boolean? isDefault?;
    boolean? isEndpointProtectionEnabled?;
    boolean? isScopedToUser?;
    string? locale?;
    string? name?;
    decimal? priority?;
    string? toolTip?;
    microsoft\.graph\.usageRightsIncluded rights?;
    microsoft\.graph\.sensitivityLabel[] sublabels?;
};

public type microsoft\.graph\.workbookChartAxisTitleFormat record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.workbookChartFont font?;
};

public type microsoft\.graph\.employeeExperienceUser record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.learningCourseActivity[] learningCourseActivities?;
};

public type microsoft\.graph\.printJob record {
    *microsoft\.graph\.entity;
    string? acknowledgedDateTime?;
    microsoft\.graph\.printJobConfiguration configuration?;
    microsoft\.graph\.userIdentity createdBy?;
    string createdDateTime?;
    decimal? errorCode?;
    boolean isFetchable?;
    string? redirectedFrom?;
    string? redirectedTo?;
    microsoft\.graph\.printJobStatus status?;
    microsoft\.graph\.printDocument[] documents?;
    microsoft\.graph\.printTask[] tasks?;
};

public type microsoft\.graph\.selectionLikelihoodInfo "notSpecified"|"high";

public type microsoft\.graph\.sensitivityLabelAssignmentMethod "standard"|"privileged"|"auto"|"unknownFutureValue";

public type microsoft\.graph\.authorizationInfo record {
    string[] certificateUserIds?;
};

public type microsoft\.graph\.folder record {
    decimal? childCount?;
    microsoft\.graph\.folderView view?;
};

public type microsoft\.graph\.authenticationMethodKeyStrength "normal"|"weak"|"unknown";

public type microsoft\.graph\.shiftPreferences record {
    *microsoft\.graph\.changeTrackedEntity;
    microsoft\.graph\.shiftAvailability[] availability?;
};

public type microsoft\.graph\.printerCapabilities record {
    microsoft\.graph\.printerCapabilitiesBottomMarginsItemsNumber[] bottomMargins?;
    boolean? collation?;
    microsoft\.graph\.printColorMode[] colorModes?;
    string[] contentTypes?;
    microsoft\.graph\.integerRange copiesPerJob?;
    microsoft\.graph\.printerCapabilitiesDpisItemsNumber[] dpis?;
    microsoft\.graph\.printDuplexMode[] duplexModes?;
    microsoft\.graph\.printerFeedOrientation[] feedOrientations?;
    microsoft\.graph\.printFinishing[] finishings?;
    string[] inputBins?;
    boolean? isColorPrintingSupported?;
    boolean? isPageRangeSupported?;
    microsoft\.graph\.printerCapabilitiesLeftMarginsItemsNumber[] leftMargins?;
    string[] mediaColors?;
    string[] mediaSizes?;
    string[] mediaTypes?;
    microsoft\.graph\.printMultipageLayout[] multipageLayouts?;
    microsoft\.graph\.printOrientation[] orientations?;
    string[] outputBins?;
    microsoft\.graph\.printerCapabilitiesPagesPerSheetItemsNumber[] pagesPerSheet?;
    microsoft\.graph\.printQuality[] qualities?;
    microsoft\.graph\.printerCapabilitiesRightMarginsItemsNumber[] rightMargins?;
    microsoft\.graph\.printScaling[] scalings?;
    boolean? supportsFitPdfToPage?;
    microsoft\.graph\.printerCapabilitiesTopMarginsItemsNumber[] topMargins?;
};

public type microsoft\.graph\.teamsTabConfiguration record {
    string? contentUrl?;
    string? entityId?;
    string? removeUrl?;
    string? websiteUrl?;
};

public type microsoft\.graph\.passwordProfile record {
    boolean? forceChangePasswordNextSignIn?;
    boolean? forceChangePasswordNextSignInWithMfa?;
    string? password?;
};

public type microsoft\.graph\.thumbnail record {
    string? content?;
    decimal? height?;
    string? sourceItemId?;
    string? url?;
    decimal? width?;
};

public type microsoft\.graph\.windowsDeviceHealthState "clean"|"fullScanPending"|"rebootPending"|"manualStepsPending"|"offlineScanPending"|"critical";

public type microsoft\.graph\.website record {
    string? address?;
    string? displayName?;
    microsoft\.graph\.websiteType 'type?;
};

public type microsoft\.graph\.onenoteUserRole "None"|"Owner"|"Contributor"|"Reader";

public type microsoft\.graph\.timeZoneBase record {
    string? name?;
};

public type microsoft\.graph\.singleValueLegacyExtendedProperty record {
    *microsoft\.graph\.entity;
    string? value?;
};

public type microsoft\.graph\.meetingParticipantInfo record {
    microsoft\.graph\.identitySet identity?;
    microsoft\.graph\.onlineMeetingRole role?;
    string? upn?;
};

public type microsoft\.graph\.chatMessagePolicyViolationUserActionTypes "none"|"override"|"reportFalsePositive";

public type root_microsoft_graph_createLink_body record {
    string? 'type?;
    string? scope?;
    string? expirationDateTime?;
    string? password?;
    string? message?;
    microsoft\.graph\.driveRecipient[] recipients?;
    boolean? retainInheritedPermissions = false;
    boolean? sendNotification = false;
};

public type microsoft\.graph\.managedAppFlaggedReason "none"|"rootedDevice";

public type microsoft\.graph\.dayNote record {
    *microsoft\.graph\.changeTrackedEntity;
    string? dayNoteDate?;
    microsoft\.graph\.itemBody draftDayNote?;
    microsoft\.graph\.itemBody sharedDayNote?;
};

public type microsoft\.graph\.list record {
    *microsoft\.graph\.baseItem;
    string? displayName?;
    microsoft\.graph\.listInfo list?;
    microsoft\.graph\.sharepointIds sharepointIds?;
    microsoft\.graph\.systemFacet system?;
    microsoft\.graph\.columnDefinition[] columns?;
    microsoft\.graph\.contentType[] contentTypes?;
    microsoft\.graph\.drive drive?;
    microsoft\.graph\.listItem[] items?;
    microsoft\.graph\.richLongRunningOperation[] operations?;
    microsoft\.graph\.subscription[] subscriptions?;
};

public type microsoft\.graph\.plannerContainerType "group"|"unknownFutureValue"|"roster";

public type microsoft\.graph\.printTask record {
    *microsoft\.graph\.entity;
    string parentUrl?;
    microsoft\.graph\.printTaskStatus status?;
    microsoft\.graph\.printTaskDefinition definition?;
    microsoft\.graph\.printTaskTrigger trigger?;
};

public type microsoft\.graph\.complianceStatus "unknown"|"notApplicable"|"compliant"|"remediated"|"nonCompliant"|"error"|"conflict"|"notAssigned";

public type microsoft\.graph\.printerCapabilitiesDpisItemsNumber decimal?;

public type microsoft\.graph\.calendarRoleType "none"|"freeBusyRead"|"limitedRead"|"read"|"write"|"delegateWithoutPrivateEventAccess"|"delegateWithPrivateEventAccess"|"custom";

public type microsoft\.graph\.teamsAsyncOperationStatus "invalid"|"notStarted"|"inProgress"|"succeeded"|"failed"|"unknownFutureValue";

public type microsoft\.graph\.delegateMeetingMessageDeliveryOptions "sendToDelegateAndInformationToPrincipal"|"sendToDelegateAndPrincipal"|"sendToDelegateOnly";

public type microsoft\.graph\.baseSitePage record {
    *microsoft\.graph\.baseItem;
    microsoft\.graph\.pageLayoutType pageLayout?;
    microsoft\.graph\.publicationFacet publishingState?;
    string? title?;
};

public type microsoft\.graph\.meetingParticipants record {
    microsoft\.graph\.meetingParticipantInfo[] attendees?;
    microsoft\.graph\.meetingParticipantInfo organizer?;
};

public type microsoft\.graph\.imageInfo record {
    boolean? addImageQuery?;
    string? alternateText?;
    string? alternativeText?;
    string? iconUrl?;
};

# Represents the Queries record for the operation: getRoot
public type GetRootQueries record {
    # Expand related entities
    string[] \$expand?;
    # Select properties to be returned
    string[] \$select?;
};

public type microsoft\.graph\.teamSpecialization "none"|"educationStandard"|"educationClass"|"educationProfessionalLearningCommunity"|"educationStaff"|"healthcareStandard"|"healthcareCareCoordination"|"unknownFutureValue";

public type microsoft\.graph\.usedInsight record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.usageDetails lastUsed?;
    microsoft\.graph\.resourceReference resourceReference?;
    microsoft\.graph\.resourceVisualization resourceVisualization?;
    microsoft\.graph\.entity 'resource?;
};

public type microsoft\.graph\.channelIdentity record {
    string? channelId?;
    string? teamId?;
};

public type microsoft\.graph\.onenoteEntityHierarchyModel record {
    *microsoft\.graph\.onenoteEntitySchemaObjectModel;
    microsoft\.graph\.identitySet createdBy?;
    string? displayName?;
    microsoft\.graph\.identitySet lastModifiedBy?;
    string? lastModifiedDateTime?;
};

public type microsoft\.graph\.contentApprovalStatusColumn record {
};

public type microsoft\.graph\.storagePlanInformation record {
    boolean? upgradeAvailable?;
};

# Represents the Headers record for the operation: deleteChildrenContentInRoot
public type DeleteChildrenContentInRootHeaders record {
    # ETag
    string If\-Match?;
};

public type microsoft\.graph\.contentTypeInfo record {
    string? id?;
    string? name?;
};

public type microsoft\.graph\.sizeRange record {
    decimal? maximumSize?;
    decimal? minimumSize?;
};

public type microsoft\.graph\.followupFlagStatus "notFlagged"|"complete"|"flagged";

# Represents the Queries record for the operation: listChildrenInRoot
public type ListChildrenInRootQueries record {
    # Skip the first n items
    int \$skip?;
    # Show only the first n items
    int \$top?;
    # Filter items by property values
    string \$filter?;
    # Search items by search phrases
    string \$search?;
    # Order items by property values
    string[] \$orderby?;
    # Expand related entities
    string[] \$expand?;
    # Include count of items
    boolean \$count?;
    # Select properties to be returned
    string[] \$select?;
};

public type microsoft\.graph\.photo record {
    string? cameraMake?;
    string? cameraModel?;
    decimal? exposureDenominator?;
    decimal? exposureNumerator?;
    decimal? fNumber?;
    decimal? focalLength?;
    decimal? iso?;
    decimal? orientation?;
    string? takenDateTime?;
};

public type microsoft\.graph\.siteArchivalDetails record {
    microsoft\.graph\.siteArchiveStatus archiveStatus?;
};

public type microsoft\.graph\.broadcastMeetingAudience "roleIsAttendee"|"organization"|"everyone"|"unknownFutureValue";

# Represents the Queries record for the operation: getItem
public type GetItemQueries record {
    # Expand related entities
    string[] \$expand?;
    # Select properties to be returned
    string[] \$select?;
};

public type microsoft\.graph\.chatMessageHostedContent record {
    *microsoft\.graph\.teamworkHostedContent;
};

public type root_microsoft_graph_checkin_body record {
    string? checkInAs?;
    string? comment?;
};

public type microsoft\.graph\.objectIdentity record {
    string? issuer?;
    string? issuerAssignedId?;
    string? signInType?;
};

public type microsoft\.graph\.plannerPlanContainer record {
    string? containerId?;
    microsoft\.graph\.plannerContainerType 'type?;
    string? url?;
};

public type microsoft\.graph\.todo record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.todoTaskList[] lists?;
};

public type microsoft\.graph\.workbookWorksheet record {
    *microsoft\.graph\.entity;
    string? name?;
    decimal position?;
    string visibility?;
    microsoft\.graph\.workbookChart[] charts?;
    microsoft\.graph\.workbookNamedItem[] names?;
    microsoft\.graph\.workbookPivotTable[] pivotTables?;
    microsoft\.graph\.workbookWorksheetProtection protection?;
    microsoft\.graph\.workbookTable[] tables?;
};

public type microsoft\.graph\.inferenceClassification record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.inferenceClassificationOverride[] overrides?;
};

public type microsoft\.graph\.workbookChartSeriesFormat record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.workbookChartFill fill?;
    microsoft\.graph\.workbookChartLineFormat line?;
};

public type microsoft\.graph\.lookupColumn record {
    boolean? allowMultipleValues?;
    boolean? allowUnlimitedLength?;
    string? columnName?;
    string? listId?;
    string? primaryLookupColumnId?;
};

public type microsoft\.graph\.printJobStateDetail "uploadPending"|"transforming"|"completedSuccessfully"|"completedWithWarnings"|"completedWithErrors"|"releaseWait"|"interpreting"|"unknownFutureValue";

public type microsoft\.graph\.settingValue record {
    string? name?;
    string? value?;
};

public type driveItemid_microsoft_graph_checkin_body record {
    string? checkInAs?;
    string? comment?;
};

public type microsoft\.graph\.workbookOperationError record {
    string? code?;
    microsoft\.graph\.workbookOperationError innerError?;
    string? message?;
};

public type microsoft\.graph\.windowsSettingType "roaming"|"backup"|"unknownFutureValue";

public type microsoft\.graph\.teamworkTag record {
    *microsoft\.graph\.entity;
    string? description?;
    string? displayName?;
    decimal? memberCount?;
    microsoft\.graph\.teamworkTagType tagType?;
    string? teamId?;
    microsoft\.graph\.teamworkTagMember[] members?;
};

public type microsoft\.graph\.profilePhoto record {
    *microsoft\.graph\.entity;
    decimal? height?;
    decimal? width?;
};

public type microsoft\.graph\.pendingContentUpdate record {
    string? queuedDateTime?;
};

public type microsoft\.graph\.teamsAsyncOperationType "invalid"|"cloneTeam"|"archiveTeam"|"unarchiveTeam"|"createTeam"|"unknownFutureValue"|"teamifyGroup"|"createChannel"|"archiveChannel"|"unarchiveChannel";

public type microsoft\.graph\.appIdentity record {
    string? appId?;
    string? displayName?;
    string? servicePrincipalId?;
    string? servicePrincipalName?;
};

public type microsoft\.graph\.userPrint record {
    microsoft\.graph\.printerShare[] recentPrinterShares?;
};

public type microsoft\.graph\.workbookChartSeries record {
    *microsoft\.graph\.entity;
    string? name?;
    microsoft\.graph\.workbookChartSeriesFormat format?;
    microsoft\.graph\.workbookChartPoint[] points?;
};

public type microsoft\.graph\.identity record {
    string? displayName?;
    string? id?;
};

public type microsoft\.graph\.root record {
};

public type microsoft\.graph\.licenseAssignmentStateDisabledPlansItemsString string?;

public type microsoft\.graph\.chatMessagePolicyViolationVerdictDetailsTypes "none"|"allowFalsePositiveOverride"|"allowOverrideWithoutJustification"|"allowOverrideWithJustification";

public type microsoft\.graph\.sharedInsight record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.sharingDetail lastShared?;
    microsoft\.graph\.resourceReference resourceReference?;
    microsoft\.graph\.resourceVisualization resourceVisualization?;
    microsoft\.graph\.sharingDetail[] sharingHistory?;
    microsoft\.graph\.entity lastSharedMethod?;
    microsoft\.graph\.entity 'resource?;
};

public type microsoft\.graph\.pendingOperations record {
    microsoft\.graph\.pendingContentUpdate pendingContentUpdate?;
};

public type microsoft\.graph\.teamworkHostedContent record {
    *microsoft\.graph\.entity;
    string? contentBytes?;
    string? contentType?;
};

public type microsoft\.graph\.pinnedChatMessageInfo record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.chatMessage message?;
};

public type microsoft\.graph\.scoredEmailAddress record {
    string? address?;
    string? itemId?;
    decimal? relevanceScore?;
    microsoft\.graph\.selectionLikelihoodInfo selectionLikelihood?;
};

public type microsoft\.graph\.workbookChartTitle record {
    *microsoft\.graph\.entity;
    boolean? overlay?;
    string? text?;
    boolean visible?;
    microsoft\.graph\.workbookChartTitleFormat format?;
};

public type microsoft\.graph\.configurationManagerClientEnabledFeatures record {
    boolean compliancePolicy?;
    boolean deviceConfiguration?;
    boolean inventory?;
    boolean modernApps?;
    boolean resourceAccess?;
    boolean windowsUpdateForBusiness?;
};

public type microsoft\.graph\.itemInsights record {
    *microsoft\.graph\.officeGraphInsights;
};

public type microsoft\.graph\.workbookChartAxisFormat record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.workbookChartFont font?;
    microsoft\.graph\.workbookChartLineFormat line?;
};

public type microsoft\.graph\.courseStatus "notStarted"|"inProgress"|"completed"|"unknownFutureValue";

public type microsoft\.graph\.folderView record {
    string? sortBy?;
    string? sortOrder?;
    string? viewType?;
};

public type microsoft\.graph\.broadcastMeetingCaptionSettings record {
    boolean? isCaptionEnabled?;
    string? spokenLanguage?;
    string[] translationLanguages?;
};

# Represents the Headers record for the operation: deleteItemByPath
public type DeleteItemByPathHeaders record {
    # ETag
    string If\-Match?;
};

public type microsoft\.graph\.teamworkConversationIdentityType "team"|"channel"|"chat"|"unknownFutureValue";

public type microsoft\.graph\.sectionLinks record {
    microsoft\.graph\.externalLink oneNoteClientUrl?;
    microsoft\.graph\.externalLink oneNoteWebUrl?;
};

public type microsoft\.graph\.resourceVisualization record {
    string? containerDisplayName?;
    string? containerType?;
    string? containerWebUrl?;
    string? mediaType?;
    string? previewImageUrl?;
    string? previewText?;
    string? title?;
    string? 'type?;
};

public type microsoft\.graph\.operationError record {
    string? code?;
    string? message?;
};

public type microsoft\.graph\.booleanColumn record {
};

public type microsoft\.graph\.printerCapabilitiesLeftMarginsItemsNumber decimal?;

public type microsoft\.graph\.workbookChartFill record {
    *microsoft\.graph\.entity;
};

public type microsoft\.graph\.managedDeviceOwnerType "unknown"|"company"|"personal"|"unknownFutureValue";

public type microsoft\.graph\.assignedLicenseDisabledPlansItemsString string;

public type microsoft\.graph\.bundle record {
    microsoft\.graph\.album album?;
    decimal? childCount?;
};

public type microsoft\.graph\.licenseProcessingState record {
    string? state?;
};

public type microsoft\.graph\.swapShiftsChangeRequest record {
    *microsoft\.graph\.offerShiftRequest;
    string? recipientShiftId?;
};

public type microsoft\.graph\.userDataSecurityAndGovernance record {
    *microsoft\.graph\.dataSecurityAndGovernance;
    microsoft\.graph\.activitiesContainer activities?;
    microsoft\.graph\.userProtectionScopeContainer protectionScopes?;
};

# Represents the Queries record for the operation: listDrive
public type ListDriveQueries record {
    # Skip the first n items
    int \$skip?;
    # Show only the first n items
    int \$top?;
    # Filter items by property values
    string \$filter?;
    # Search items by search phrases
    string \$search?;
    # Order items by property values
    string[] \$orderby?;
    # Expand related entities
    string[] \$expand?;
    # Select properties to be returned
    string[] \$select?;
};

public type microsoft\.graph\.driveItemSource record {
    microsoft\.graph\.driveItemSourceApplication application?;
    string? externalId?;
};

public type microsoft\.graph\.workbookChartLineFormat record {
    *microsoft\.graph\.entity;
    string? color?;
};

public type microsoft\.graph\.timeOffReason record {
    *microsoft\.graph\.changeTrackedEntity;
    string? code?;
    string? displayName?;
    microsoft\.graph\.timeOffReasonIconType iconType?;
    boolean? isActive?;
};

public type microsoft\.graph\.printTaskTrigger record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.printEvent event?;
    microsoft\.graph\.printTaskDefinition definition?;
};

public type microsoft\.graph\.columnLink record {
    *microsoft\.graph\.entity;
    string? name?;
};

public type microsoft\.graph\.virtualEventExternalRegistrationInformation record {
    string? referrer?;
    string? registrationId?;
};

# Represents the Queries record for the operation: getItemByPath
public type GetItemByPathQueries record {
    # Expand related entities
    string[] \$expand?;
    # Select properties to be returned
    string[] \$select?;
};

public type microsoft\.graph\.storageQuotaBreakdown record {
    *microsoft\.graph\.entity;
    string? displayName?;
    string? manageWebUrl?;
    decimal? used?;
};

public type microsoft\.graph\.fieldValueSet record {
    *microsoft\.graph\.entity;
};

public type microsoft\.graph\.post record {
    *microsoft\.graph\.outlookItem;
    microsoft\.graph\.itemBody body?;
    string? conversationId?;
    string? conversationThreadId?;
    microsoft\.graph\.recipient 'from?;
    boolean hasAttachments?;
    microsoft\.graph\.recipient[] newParticipants?;
    string receivedDateTime?;
    microsoft\.graph\.recipient sender?;
    microsoft\.graph\.attachment[] attachments?;
    microsoft\.graph\.extension[] extensions?;
    microsoft\.graph\.post inReplyTo?;
    microsoft\.graph\.multiValueLegacyExtendedProperty[] multiValueExtendedProperties?;
    microsoft\.graph\.singleValueLegacyExtendedProperty[] singleValueExtendedProperties?;
};

public type microsoft\.graph\.workbookChart record {
    *microsoft\.graph\.entity;
    decimal? height?;
    decimal? left?;
    string? name?;
    decimal? top?;
    decimal? width?;
    microsoft\.graph\.workbookChartAxes axes?;
    microsoft\.graph\.workbookChartDataLabels dataLabels?;
    microsoft\.graph\.workbookChartAreaFormat format?;
    microsoft\.graph\.workbookChartLegend legend?;
    microsoft\.graph\.workbookChartSeries[] series?;
    microsoft\.graph\.workbookChartTitle title?;
    microsoft\.graph\.workbookWorksheet worksheet?;
};

public type microsoft\.graph\.workbookOperation record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.workbookOperationError 'error?;
    string? resourceLocation?;
    microsoft\.graph\.workbookOperationStatus status?;
};

public type microsoft\.graph\.recurrencePattern record {
    decimal dayOfMonth?;
    microsoft\.graph\.dayOfWeek[] daysOfWeek?;
    microsoft\.graph\.dayOfWeek firstDayOfWeek?;
    microsoft\.graph\.weekIndex index?;
    decimal interval?;
    decimal month?;
    microsoft\.graph\.recurrencePatternType 'type?;
};

public type microsoft\.graph\.retentionLabelSettings record {
    microsoft\.graph\.security\.behaviorDuringRetentionPeriod behaviorDuringRetentionPeriod?;
    boolean? isContentUpdateAllowed?;
    boolean? isDeleteAllowed?;
    boolean? isLabelUpdateAllowed?;
    boolean? isMetadataUpdateAllowed?;
    boolean? isRecordLocked?;
};

public type microsoft\.graph\.followupFlag record {
    microsoft\.graph\.dateTimeTimeZone completedDateTime?;
    microsoft\.graph\.dateTimeTimeZone dueDateTime?;
    microsoft\.graph\.followupFlagStatus flagStatus?;
    microsoft\.graph\.dateTimeTimeZone startDateTime?;
};

public type microsoft\.graph\.Json record {
};

public type microsoft\.graph\.associatedTeamInfo record {
    *microsoft\.graph\.teamInfo;
};

public type microsoft\.graph\.presence record {
    *microsoft\.graph\.entity;
    string? activity?;
    string? availability?;
    microsoft\.graph\.outOfOfficeSettings outOfOfficeSettings?;
    string? sequenceNumber?;
    microsoft\.graph\.presenceStatusMessage statusMessage?;
};

public type microsoft\.graph\.chatInfo record {
    string? messageId?;
    string? replyChainMessageId?;
    string? threadId?;
};

public type microsoft\.graph\.assignedLabel record {
    string? displayName?;
    string? labelId?;
};

public type microsoft\.graph\.timeCardEntry record {
    microsoft\.graph\.timeCardBreak[] breaks?;
    microsoft\.graph\.timeCardEvent clockInEvent?;
    microsoft\.graph\.timeCardEvent clockOutEvent?;
};

public type microsoft\.graph\.groupLifecyclePolicy record {
    *microsoft\.graph\.entity;
    string? alternateNotificationEmails?;
    decimal? groupLifetimeInDays?;
    string? managedGroupTypes?;
};

public type microsoft\.graph\.outlookItem record {
    *microsoft\.graph\.entity;
    string[] categories?;
    string? changeKey?;
    string? createdDateTime?;
    string? lastModifiedDateTime?;
};

public type microsoft\.graph\.printerCapabilitiesTopMarginsItemsNumber decimal?;

public type microsoft\.graph\.onlineMeetingBase record {
    *microsoft\.graph\.entity;
    boolean? allowAttendeeToEnableCamera?;
    boolean? allowAttendeeToEnableMic?;
    boolean? allowBreakoutRooms?;
    microsoft\.graph\.allowedLobbyAdmitterRoles allowedLobbyAdmitters?;
    microsoft\.graph\.onlineMeetingPresenters allowedPresenters?;
    microsoft\.graph\.meetingLiveShareOptions allowLiveShare?;
    microsoft\.graph\.meetingChatMode allowMeetingChat?;
    boolean? allowParticipantsToChangeName?;
    boolean? allowPowerPointSharing?;
    boolean? allowRecording?;
    boolean? allowTeamworkReactions?;
    boolean? allowTranscription?;
    boolean? allowWhiteboard?;
    microsoft\.graph\.audioConferencing audioConferencing?;
    microsoft\.graph\.chatInfo chatInfo?;
    microsoft\.graph\.chatRestrictions chatRestrictions?;
    boolean? isEndToEndEncryptionEnabled?;
    boolean? isEntryExitAnnounced?;
    microsoft\.graph\.itemBody joinInformation?;
    microsoft\.graph\.joinMeetingIdSettings joinMeetingIdSettings?;
    string? joinWebUrl?;
    microsoft\.graph\.lobbyBypassSettings lobbyBypassSettings?;
    boolean? recordAutomatically?;
    microsoft\.graph\.meetingChatHistoryDefaultMode shareMeetingChatHistoryDefault?;
    string? subject?;
    string? videoTeleconferenceId?;
    microsoft\.graph\.watermarkProtectionValues watermarkProtection?;
    microsoft\.graph\.meetingAttendanceReport[] attendanceReports?;
};

public type microsoft\.graph\.emailAuthenticationMethod record {
    *microsoft\.graph\.authenticationMethod;
    string? emailAddress?;
};

public type microsoft\.graph\.printJobConfiguration record {
    boolean? collate?;
    microsoft\.graph\.printColorMode colorMode?;
    decimal? copies?;
    decimal? dpi?;
    microsoft\.graph\.printDuplexMode duplexMode?;
    microsoft\.graph\.printerFeedOrientation feedOrientation?;
    microsoft\.graph\.printFinishing[] finishings?;
    boolean? fitPdfToPage?;
    string? inputBin?;
    microsoft\.graph\.printMargin margin?;
    string? mediaSize?;
    string? mediaType?;
    microsoft\.graph\.printMultipageLayout multipageLayout?;
    microsoft\.graph\.printOrientation orientation?;
    string? outputBin?;
    microsoft\.graph\.integerRange[] pageRanges?;
    decimal? pagesPerSheet?;
    microsoft\.graph\.printQuality quality?;
    microsoft\.graph\.printScaling scaling?;
};

public type microsoft\.graph\.itemRetentionLabel record {
    *microsoft\.graph\.entity;
    boolean? isLabelAppliedExplicitly?;
    microsoft\.graph\.identitySet labelAppliedBy?;
    string? labelAppliedDateTime?;
    string? name?;
    microsoft\.graph\.retentionLabelSettings retentionSettings?;
};

public type microsoft\.graph\.plannerPreviewType "automatic"|"noPreview"|"checklist"|"description"|"reference";

public type microsoft\.graph\.outlookCategory record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.categoryColor color?;
    string? displayName?;
};

public type microsoft\.graph\.location record {
    microsoft\.graph\.physicalAddress address?;
    microsoft\.graph\.outlookGeoCoordinates coordinates?;
    string? displayName?;
    string? locationEmailAddress?;
    microsoft\.graph\.locationType locationType?;
    string? locationUri?;
    string? uniqueId?;
    microsoft\.graph\.locationUniqueIdType uniqueIdType?;
};

public type microsoft\.graph\.resourceSpecificPermissionGrant record {
    *microsoft\.graph\.directoryObject;
    string? clientAppId?;
    string? clientId?;
    string? permission?;
    string? permissionType?;
    string? resourceAppId?;
};

public type microsoft\.graph\.geolocationColumn record {
};

public type microsoft\.graph\.windowsDefenderProductStatus "noStatus"|"serviceNotRunning"|"serviceStartedWithoutMalwareProtection"|"pendingFullScanDueToThreatAction"|"pendingRebootDueToThreatAction"|"pendingManualStepsDueToThreatAction"|"avSignaturesOutOfDate"|"asSignaturesOutOfDate"|"noQuickScanHappenedForSpecifiedPeriod"|"noFullScanHappenedForSpecifiedPeriod"|"systemInitiatedScanInProgress"|"systemInitiatedCleanInProgress"|"samplesPendingSubmission"|"productRunningInEvaluationMode"|"productRunningInNonGenuineMode"|"productExpired"|"offlineScanRequired"|"serviceShutdownAsPartOfSystemShutdown"|"threatRemediationFailedCritically"|"threatRemediationFailedNonCritically"|"noStatusFlagsSet"|"platformOutOfDate"|"platformUpdateInProgress"|"platformAboutToBeOutdated"|"signatureOrPlatformEndOfLifeIsPastOrIsImpending"|"windowsSModeSignaturesInUseOnNonWin10SInstall";

public type microsoft\.graph\.contactFolder record {
    *microsoft\.graph\.entity;
    string? displayName?;
    string? parentFolderId?;
    microsoft\.graph\.contactFolder[] childFolders?;
    microsoft\.graph\.contact[] contacts?;
    microsoft\.graph\.multiValueLegacyExtendedProperty[] multiValueExtendedProperties?;
    microsoft\.graph\.singleValueLegacyExtendedProperty[] singleValueExtendedProperties?;
};

public type microsoft\.graph\.lobbyBypassScope "organizer"|"organization"|"organizationAndFederated"|"everyone"|"unknownFutureValue"|"invited"|"organizationExcludingGuests";

public type microsoft\.graph\.listItem record {
    *microsoft\.graph\.baseItem;
    microsoft\.graph\.contentTypeInfo contentType?;
    microsoft\.graph\.sharepointIds sharepointIds?;
    microsoft\.graph\.itemAnalytics analytics?;
    microsoft\.graph\.documentSetVersion[] documentSetVersions?;
    microsoft\.graph\.driveItem driveItem?;
    microsoft\.graph\.fieldValueSet fields?;
    microsoft\.graph\.listItemVersion[] versions?;
};

public type microsoft\.graph\.specialFolder record {
    string? name?;
};

public type microsoft\.graph\.broadcastMeetingSettings record {
    microsoft\.graph\.broadcastMeetingAudience allowedAudience?;
    microsoft\.graph\.broadcastMeetingCaptionSettings captions?;
    boolean? isAttendeeReportEnabled?;
    boolean? isQuestionAndAnswerEnabled?;
    boolean? isRecordingEnabled?;
    boolean? isVideoOnDemandEnabled?;
};

public type microsoft\.graph\.authenticationMethod record {
    *microsoft\.graph\.entity;
};

public type microsoft\.graph\.workbookWorksheetProtection record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.workbookWorksheetProtectionOptions options?;
    boolean protected?;
};

public type microsoft\.graph\.printTaskProcessingState "pending"|"processing"|"completed"|"aborted"|"unknownFutureValue";

public type microsoft\.graph\.alternativeSecurityId record {
    string? identityProvider?;
    string? 'key?;
    decimal? 'type?;
};

public type microsoft\.graph\.windowsSettingInstance record {
    *microsoft\.graph\.entity;
    string createdDateTime?;
    string expirationDateTime?;
    string? lastModifiedDateTime?;
    string payload?;
};

public type microsoft\.graph\.onPremisesExtensionAttributes record {
    string? extensionAttribute1?;
    string? extensionAttribute10?;
    string? extensionAttribute11?;
    string? extensionAttribute12?;
    string? extensionAttribute13?;
    string? extensionAttribute14?;
    string? extensionAttribute15?;
    string? extensionAttribute2?;
    string? extensionAttribute3?;
    string? extensionAttribute4?;
    string? extensionAttribute5?;
    string? extensionAttribute6?;
    string? extensionAttribute7?;
    string? extensionAttribute8?;
    string? extensionAttribute9?;
};

public type microsoft\.graph\.shift record {
    *microsoft\.graph\.changeTrackedEntity;
    microsoft\.graph\.shiftItem draftShift?;
    boolean? isStagedForDeletion?;
    string? schedulingGroupId?;
    microsoft\.graph\.shiftItem sharedShift?;
    string? userId?;
};

public type microsoft\.graph\.appLogUploadState "pending"|"completed"|"failed"|"unknownFutureValue";

public type microsoft\.graph\.provisionedPlan record {
    string? capabilityStatus?;
    string? provisioningStatus?;
    string? 'service?;
};

public type microsoft\.graph\.conversationMember record {
    *microsoft\.graph\.entity;
    string? displayName?;
    string[] roles?;
    string? visibleHistoryStartDateTime?;
};

public type microsoft\.graph\.windowsMalwareCategory "invalid"|"adware"|"spyware"|"passwordStealer"|"trojanDownloader"|"worm"|"backdoor"|"remoteAccessTrojan"|"trojan"|"emailFlooder"|"keylogger"|"dialer"|"monitoringSoftware"|"browserModifier"|"cookie"|"browserPlugin"|"aolExploit"|"nuker"|"securityDisabler"|"jokeProgram"|"hostileActiveXControl"|"softwareBundler"|"stealthNotifier"|"settingsModifier"|"toolBar"|"remoteControlSoftware"|"trojanFtp"|"potentialUnwantedSoftware"|"icqExploit"|"trojanTelnet"|"exploit"|"filesharingProgram"|"malwareCreationTool"|"remote_Control_Software"|"tool"|"trojanDenialOfService"|"trojanDropper"|"trojanMassMailer"|"trojanMonitoringSoftware"|"trojanProxyServer"|"virus"|"known"|"unknown"|"spp"|"behavior"|"vulnerability"|"policy"|"enterpriseUnwantedSoftware"|"ransom"|"hipsRule";

public type microsoft\.graph\.longRunningOperation record {
    *microsoft\.graph\.entity;
    string? createdDateTime?;
    string? lastActionDateTime?;
    string? resourceLocation?;
    microsoft\.graph\.longRunningOperationStatus status?;
    string? statusDetail?;
};

public type microsoft\.graph\.teamworkConversationIdentity record {
    *microsoft\.graph\.identity;
    microsoft\.graph\.teamworkConversationIdentityType conversationIdentityType?;
};

public type microsoft\.graph\.chatMessageInfo record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.itemBody body?;
    string? createdDateTime?;
    microsoft\.graph\.eventMessageDetail eventDetail?;
    microsoft\.graph\.chatMessageFromIdentitySet 'from?;
    boolean? isDeleted?;
    microsoft\.graph\.chatMessageType messageType?;
};

public type microsoft\.graph\.dayOfWeek "sunday"|"monday"|"tuesday"|"wednesday"|"thursday"|"friday"|"saturday";

public type microsoft\.graph\.incompleteData record {
    string? missingDataBeforeDateTime?;
    boolean? wasThrottled?;
};

public type microsoft\.graph\.termStore\.termGroupScope "global"|"system"|"siteCollection"|"unknownFutureValue";

public type microsoft\.graph\.chatMessageReaction record {
    string createdDateTime?;
    string? displayName?;
    string? reactionContentUrl?;
    string reactionType?;
    microsoft\.graph\.chatMessageReactionIdentitySet user?;
};

public type microsoft\.graph\.printTaskStatus record {
    string description?;
    microsoft\.graph\.printTaskProcessingState state?;
};

public type microsoft\.graph\.attendee record {
    *microsoft\.graph\.attendeeBase;
    microsoft\.graph\.timeSlot proposedNewTime?;
    microsoft\.graph\.responseStatus status?;
};

public type microsoft\.graph\.usageRights "unknown"|"docEdit"|"edit"|"comment"|"export"|"forward"|"owner"|"print"|"reply"|"replyAll"|"view"|"extract"|"viewRightsData"|"editRightsData"|"objModel"|"accessDenied"|"userDefinedProtectionTypeNotSupportedException"|"encryptedProtectionTypeNotSupportedException"|"purviewClaimsChallengeNotSupportedException"|"exception"|"unknownFutureValue";

public type microsoft\.graph\.file record {
    microsoft\.graph\.hashes hashes?;
    string? mimeType?;
    boolean? processingMetadata?;
};

# Represents the Queries record for the operation: getChildrenContentByPath
public type GetChildrenContentByPathQueries record {
    # Format of the content
    string \$format?;
};

public type microsoft\.graph\.hashes record {
    string? crc32Hash?;
    string? quickXorHash?;
    string? sha1Hash?;
    string? sha256Hash?;
};

public type microsoft\.graph\.video record {
    decimal? audioBitsPerSample?;
    decimal? audioChannels?;
    string? audioFormat?;
    decimal? audioSamplesPerSecond?;
    decimal? bitrate?;
    decimal? duration?;
    string? fourCC?;
    decimal? frameRate?;
    decimal? height?;
    decimal? width?;
};

public type microsoft\.graph\.integerRange record {
    decimal? end?;
    decimal? 'start?;
};

public type microsoft\.graph\.licenseDetails record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.servicePlanInfo[] servicePlans?;
    string? skuId?;
    string? skuPartNumber?;
};

public type microsoft\.graph\.teamworkTagType "standard"|"unknownFutureValue";

public type microsoft\.graph\.plannerTaskDetails record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.plannerChecklistItems checklist?;
    string? description?;
    microsoft\.graph\.plannerPreviewType previewType?;
    microsoft\.graph\.plannerExternalReferences references?;
};

public type microsoft\.graph\.activitiesContainer record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.contentActivity[] contentActivities?;
};

public type microsoft\.graph\.publicationFacet record {
    microsoft\.graph\.identitySet checkedOutBy?;
    string? level?;
    string? versionId?;
};

public type microsoft\.graph\.teamInfo record {
    *microsoft\.graph\.entity;
    string? displayName?;
    string? tenantId?;
    microsoft\.graph\.team team?;
};

public type microsoft\.graph\.printerProcessingStateDetail "paused"|"mediaJam"|"mediaNeeded"|"mediaLow"|"mediaEmpty"|"coverOpen"|"interlockOpen"|"outputTrayMissing"|"outputAreaFull"|"markerSupplyLow"|"markerSupplyEmpty"|"inputTrayMissing"|"outputAreaAlmostFull"|"markerWasteAlmostFull"|"markerWasteFull"|"fuserOverTemp"|"fuserUnderTemp"|"other"|"none"|"movingToPaused"|"shutdown"|"connectingToDevice"|"timedOut"|"stopping"|"stoppedPartially"|"tonerLow"|"tonerEmpty"|"spoolAreaFull"|"doorOpen"|"opticalPhotoConductorNearEndOfLife"|"opticalPhotoConductorLifeOver"|"developerLow"|"developerEmpty"|"interpreterResourceUnavailable"|"unknownFutureValue"|"alertRemovalOfBinaryChangeEntry"|"banderAdded"|"banderAlmostEmpty"|"banderAlmostFull"|"banderAtLimit"|"banderClosed"|"banderConfigurationChange"|"banderCoverClosed"|"banderCoverOpen"|"banderEmpty"|"banderFull"|"banderInterlockClosed"|"banderInterlockOpen"|"banderJam"|"banderLifeAlmostOver"|"banderLifeOver"|"banderMemoryExhausted"|"banderMissing"|"banderMotorFailure"|"banderNearLimit"|"banderOffline"|"banderOpened"|"banderOverTemperature"|"banderPowerSaver"|"banderRecoverableFailure"|"banderRecoverableStorage"|"banderRemoved"|"banderResourceAdded"|"banderResourceRemoved"|"banderThermistorFailure"|"banderTimingFailure"|"banderTurnedOff"|"banderTurnedOn"|"banderUnderTemperature"|"banderUnrecoverableFailure"|"banderUnrecoverableStorageError"|"banderWarmingUp"|"binderAdded"|"binderAlmostEmpty"|"binderAlmostFull"|"binderAtLimit"|"binderClosed"|"binderConfigurationChange"|"binderCoverClosed"|"binderCoverOpen"|"binderEmpty"|"binderFull"|"binderInterlockClosed"|"binderInterlockOpen"|"binderJam"|"binderLifeAlmostOver"|"binderLifeOver"|"binderMemoryExhausted"|"binderMissing"|"binderMotorFailure"|"binderNearLimit"|"binderOffline"|"binderOpened"|"binderOverTemperature"|"binderPowerSaver"|"binderRecoverableFailure"|"binderRecoverableStorage"|"binderRemoved"|"binderResourceAdded"|"binderResourceRemoved"|"binderThermistorFailure"|"binderTimingFailure"|"binderTurnedOff"|"binderTurnedOn"|"binderUnderTemperature"|"binderUnrecoverableFailure"|"binderUnrecoverableStorageError"|"binderWarmingUp"|"cameraFailure"|"chamberCooling"|"chamberFailure"|"chamberHeating"|"chamberTemperatureHigh"|"chamberTemperatureLow"|"cleanerLifeAlmostOver"|"cleanerLifeOver"|"configurationChange"|"deactivated"|"deleted"|"dieCutterAdded"|"dieCutterAlmostEmpty"|"dieCutterAlmostFull"|"dieCutterAtLimit"|"dieCutterClosed"|"dieCutterConfigurationChange"|"dieCutterCoverClosed"|"dieCutterCoverOpen"|"dieCutterEmpty"|"dieCutterFull"|"dieCutterInterlockClosed"|"dieCutterInterlockOpen"|"dieCutterJam"|"dieCutterLifeAlmostOver"|"dieCutterLifeOver"|"dieCutterMemoryExhausted"|"dieCutterMissing"|"dieCutterMotorFailure"|"dieCutterNearLimit"|"dieCutterOffline"|"dieCutterOpened"|"dieCutterOverTemperature"|"dieCutterPowerSaver"|"dieCutterRecoverableFailure"|"dieCutterRecoverableStorage"|"dieCutterRemoved"|"dieCutterResourceAdded"|"dieCutterResourceRemoved"|"dieCutterThermistorFailure"|"dieCutterTimingFailure"|"dieCutterTurnedOff"|"dieCutterTurnedOn"|"dieCutterUnderTemperature"|"dieCutterUnrecoverableFailure"|"dieCutterUnrecoverableStorageError"|"dieCutterWarmingUp"|"extruderCooling"|"extruderFailure"|"extruderHeating"|"extruderJam"|"extruderTemperatureHigh"|"extruderTemperatureLow"|"fanFailure"|"faxModemLifeAlmostOver"|"faxModemLifeOver"|"faxModemMissing"|"faxModemTurnedOff"|"faxModemTurnedOn"|"folderAdded"|"folderAlmostEmpty"|"folderAlmostFull"|"folderAtLimit"|"folderClosed"|"folderConfigurationChange"|"folderCoverClosed"|"folderCoverOpen"|"folderEmpty"|"folderFull"|"folderInterlockClosed"|"folderInterlockOpen"|"folderJam"|"folderLifeAlmostOver"|"folderLifeOver"|"folderMemoryExhausted"|"folderMissing"|"folderMotorFailure"|"folderNearLimit"|"folderOffline"|"folderOpened"|"folderOverTemperature"|"folderPowerSaver"|"folderRecoverableFailure"|"folderRecoverableStorage"|"folderRemoved"|"folderResourceAdded"|"folderResourceRemoved"|"folderThermistorFailure"|"folderTimingFailure"|"folderTurnedOff"|"folderTurnedOn"|"folderUnderTemperature"|"folderUnrecoverableFailure"|"folderUnrecoverableStorageError"|"folderWarmingUp"|"hibernate"|"holdNewJobs"|"identifyPrinterRequested"|"imprinterAdded"|"imprinterAlmostEmpty"|"imprinterAlmostFull"|"imprinterAtLimit"|"imprinterClosed"|"imprinterConfigurationChange"|"imprinterCoverClosed"|"imprinterCoverOpen"|"imprinterEmpty"|"imprinterFull"|"imprinterInterlockClosed"|"imprinterInterlockOpen"|"imprinterJam"|"imprinterLifeAlmostOver"|"imprinterLifeOver"|"imprinterMemoryExhausted"|"imprinterMissing"|"imprinterMotorFailure"|"imprinterNearLimit"|"imprinterOffline"|"imprinterOpened"|"imprinterOverTemperature"|"imprinterPowerSaver"|"imprinterRecoverableFailure"|"imprinterRecoverableStorage"|"imprinterRemoved"|"imprinterResourceAdded"|"imprinterResourceRemoved"|"imprinterThermistorFailure"|"imprinterTimingFailure"|"imprinterTurnedOff"|"imprinterTurnedOn"|"imprinterUnderTemperature"|"imprinterUnrecoverableFailure"|"imprinterUnrecoverableStorageError"|"imprinterWarmingUp"|"inputCannotFeedSizeSelected"|"inputManualInputRequest"|"inputMediaColorChange"|"inputMediaFormPartsChange"|"inputMediaSizeChange"|"inputMediaTrayFailure"|"inputMediaTrayFeedError"|"inputMediaTrayJam"|"inputMediaTypeChange"|"inputMediaWeightChange"|"inputPickRollerFailure"|"inputPickRollerLifeOver"|"inputPickRollerLifeWarn"|"inputPickRollerMissing"|"inputTrayElevationFailure"|"inputTrayPositionFailure"|"inserterAdded"|"inserterAlmostEmpty"|"inserterAlmostFull"|"inserterAtLimit"|"inserterClosed"|"inserterConfigurationChange"|"inserterCoverClosed"|"inserterCoverOpen"|"inserterEmpty"|"inserterFull"|"inserterInterlockClosed"|"inserterInterlockOpen"|"inserterJam"|"inserterLifeAlmostOver"|"inserterLifeOver"|"inserterMemoryExhausted"|"inserterMissing"|"inserterMotorFailure"|"inserterNearLimit"|"inserterOffline"|"inserterOpened"|"inserterOverTemperature"|"inserterPowerSaver"|"inserterRecoverableFailure"|"inserterRecoverableStorage"|"inserterRemoved"|"inserterResourceAdded"|"inserterResourceRemoved"|"inserterThermistorFailure"|"inserterTimingFailure"|"inserterTurnedOff"|"inserterTurnedOn"|"inserterUnderTemperature"|"inserterUnrecoverableFailure"|"inserterUnrecoverableStorageError"|"inserterWarmingUp"|"interlockClosed"|"interpreterCartridgeAdded"|"interpreterCartridgeDeleted"|"interpreterComplexPageEncountered"|"interpreterMemoryDecrease"|"interpreterMemoryIncrease"|"interpreterResourceAdded"|"interpreterResourceDeleted"|"lampAtEol"|"lampFailure"|"lampNearEol"|"laserAtEol"|"laserFailure"|"laserNearEol"|"makeEnvelopeAdded"|"makeEnvelopeAlmostEmpty"|"makeEnvelopeAlmostFull"|"makeEnvelopeAtLimit"|"makeEnvelopeClosed"|"makeEnvelopeConfigurationChange"|"makeEnvelopeCoverClosed"|"makeEnvelopeCoverOpen"|"makeEnvelopeEmpty"|"makeEnvelopeFull"|"makeEnvelopeInterlockClosed"|"makeEnvelopeInterlockOpen"|"makeEnvelopeJam"|"makeEnvelopeLifeAlmostOver"|"makeEnvelopeLifeOver"|"makeEnvelopeMemoryExhausted"|"makeEnvelopeMissing"|"makeEnvelopeMotorFailure"|"makeEnvelopeNearLimit"|"makeEnvelopeOffline"|"makeEnvelopeOpened"|"makeEnvelopeOverTemperature"|"makeEnvelopePowerSaver"|"makeEnvelopeRecoverableFailure"|"makeEnvelopeRecoverableStorage"|"makeEnvelopeRemoved"|"makeEnvelopeResourceAdded"|"makeEnvelopeResourceRemoved"|"makeEnvelopeThermistorFailure"|"makeEnvelopeTimingFailure"|"makeEnvelopeTurnedOff"|"makeEnvelopeTurnedOn"|"makeEnvelopeUnderTemperature"|"makeEnvelopeUnrecoverableFailure"|"makeEnvelopeUnrecoverableStorageError"|"makeEnvelopeWarmingUp"|"markerAdjustingPrintQuality"|"markerCleanerMissing"|"markerDeveloperAlmostEmpty"|"markerDeveloperEmpty"|"markerDeveloperMissing"|"markerFuserMissing"|"markerFuserThermistorFailure"|"markerFuserTimingFailure"|"markerInkAlmostEmpty"|"markerInkEmpty"|"markerInkMissing"|"markerOpcMissing"|"markerPrintRibbonAlmostEmpty"|"markerPrintRibbonEmpty"|"markerPrintRibbonMissing"|"markerSupplyAlmostEmpty"|"markerSupplyMissing"|"markerTonerCartridgeMissing"|"markerTonerMissing"|"markerWasteInkReceptacleAlmostFull"|"markerWasteInkReceptacleFull"|"markerWasteInkReceptacleMissing"|"markerWasteMissing"|"markerWasteTonerReceptacleAlmostFull"|"markerWasteTonerReceptacleFull"|"markerWasteTonerReceptacleMissing"|"materialEmpty"|"materialLow"|"materialNeeded"|"mediaDrying"|"mediaPathCannotDuplexMediaSelected"|"mediaPathFailure"|"mediaPathInputEmpty"|"mediaPathInputFeedError"|"mediaPathInputJam"|"mediaPathInputRequest"|"mediaPathJam"|"mediaPathMediaTrayAlmostFull"|"mediaPathMediaTrayFull"|"mediaPathMediaTrayMissing"|"mediaPathOutputFeedError"|"mediaPathOutputFull"|"mediaPathOutputJam"|"mediaPathPickRollerFailure"|"mediaPathPickRollerLifeOver"|"mediaPathPickRollerLifeWarn"|"mediaPathPickRollerMissing"|"motorFailure"|"outputMailboxSelectFailure"|"outputMediaTrayFailure"|"outputMediaTrayFeedError"|"outputMediaTrayJam"|"perforaterAdded"|"perforaterAlmostEmpty"|"perforaterAlmostFull"|"perforaterAtLimit"|"perforaterClosed"|"perforaterConfigurationChange"|"perforaterCoverClosed"|"perforaterCoverOpen"|"perforaterEmpty"|"perforaterFull"|"perforaterInterlockClosed"|"perforaterInterlockOpen"|"perforaterJam"|"perforaterLifeAlmostOver"|"perforaterLifeOver"|"perforaterMemoryExhausted"|"perforaterMissing"|"perforaterMotorFailure"|"perforaterNearLimit"|"perforaterOffline"|"perforaterOpened"|"perforaterOverTemperature"|"perforaterPowerSaver"|"perforaterRecoverableFailure"|"perforaterRecoverableStorage"|"perforaterRemoved"|"perforaterResourceAdded"|"perforaterResourceRemoved"|"perforaterThermistorFailure"|"perforaterTimingFailure"|"perforaterTurnedOff"|"perforaterTurnedOn"|"perforaterUnderTemperature"|"perforaterUnrecoverableFailure"|"perforaterUnrecoverableStorageError"|"perforaterWarmingUp"|"platformCooling"|"platformFailure"|"platformHeating"|"platformTemperatureHigh"|"platformTemperatureLow"|"powerDown"|"powerUp"|"printerManualReset"|"printerNmsReset"|"printerReadyToPrint"|"puncherAdded"|"puncherAlmostEmpty"|"puncherAlmostFull"|"puncherAtLimit"|"puncherClosed"|"puncherConfigurationChange"|"puncherCoverClosed"|"puncherCoverOpen"|"puncherEmpty"|"puncherFull"|"puncherInterlockClosed"|"puncherInterlockOpen"|"puncherJam"|"puncherLifeAlmostOver"|"puncherLifeOver"|"puncherMemoryExhausted"|"puncherMissing"|"puncherMotorFailure"|"puncherNearLimit"|"puncherOffline"|"puncherOpened"|"puncherOverTemperature"|"puncherPowerSaver"|"puncherRecoverableFailure"|"puncherRecoverableStorage"|"puncherRemoved"|"puncherResourceAdded"|"puncherResourceRemoved"|"puncherThermistorFailure"|"puncherTimingFailure"|"puncherTurnedOff"|"puncherTurnedOn"|"puncherUnderTemperature"|"puncherUnrecoverableFailure"|"puncherUnrecoverableStorageError"|"puncherWarmingUp"|"resuming"|"scanMediaPathFailure"|"scanMediaPathInputEmpty"|"scanMediaPathInputFeedError"|"scanMediaPathInputJam"|"scanMediaPathInputRequest"|"scanMediaPathJam"|"scanMediaPathOutputFeedError"|"scanMediaPathOutputFull"|"scanMediaPathOutputJam"|"scanMediaPathPickRollerFailure"|"scanMediaPathPickRollerLifeOver"|"scanMediaPathPickRollerLifeWarn"|"scanMediaPathPickRollerMissing"|"scanMediaPathTrayAlmostFull"|"scanMediaPathTrayFull"|"scanMediaPathTrayMissing"|"scannerLightFailure"|"scannerLightLifeAlmostOver"|"scannerLightLifeOver"|"scannerLightMissing"|"scannerSensorFailure"|"scannerSensorLifeAlmostOver"|"scannerSensorLifeOver"|"scannerSensorMissing"|"separationCutterAdded"|"separationCutterAlmostEmpty"|"separationCutterAlmostFull"|"separationCutterAtLimit"|"separationCutterClosed"|"separationCutterConfigurationChange"|"separationCutterCoverClosed"|"separationCutterCoverOpen"|"separationCutterEmpty"|"separationCutterFull"|"separationCutterInterlockClosed"|"separationCutterInterlockOpen"|"separationCutterJam"|"separationCutterLifeAlmostOver"|"separationCutterLifeOver"|"separationCutterMemoryExhausted"|"separationCutterMissing"|"separationCutterMotorFailure"|"separationCutterNearLimit"|"separationCutterOffline"|"separationCutterOpened"|"separationCutterOverTemperature"|"separationCutterPowerSaver"|"separationCutterRecoverableFailure"|"separationCutterRecoverableStorage"|"separationCutterRemoved"|"separationCutterResourceAdded"|"separationCutterResourceRemoved"|"separationCutterThermistorFailure"|"separationCutterTimingFailure"|"separationCutterTurnedOff"|"separationCutterTurnedOn"|"separationCutterUnderTemperature"|"separationCutterUnrecoverableFailure"|"separationCutterUnrecoverableStorageError"|"separationCutterWarmingUp"|"sheetRotatorAdded"|"sheetRotatorAlmostEmpty"|"sheetRotatorAlmostFull"|"sheetRotatorAtLimit"|"sheetRotatorClosed"|"sheetRotatorConfigurationChange"|"sheetRotatorCoverClosed"|"sheetRotatorCoverOpen"|"sheetRotatorEmpty"|"sheetRotatorFull"|"sheetRotatorInterlockClosed"|"sheetRotatorInterlockOpen"|"sheetRotatorJam"|"sheetRotatorLifeAlmostOver"|"sheetRotatorLifeOver"|"sheetRotatorMemoryExhausted"|"sheetRotatorMissing"|"sheetRotatorMotorFailure"|"sheetRotatorNearLimit"|"sheetRotatorOffline"|"sheetRotatorOpened"|"sheetRotatorOverTemperature"|"sheetRotatorPowerSaver"|"sheetRotatorRecoverableFailure"|"sheetRotatorRecoverableStorage"|"sheetRotatorRemoved"|"sheetRotatorResourceAdded"|"sheetRotatorResourceRemoved"|"sheetRotatorThermistorFailure"|"sheetRotatorTimingFailure"|"sheetRotatorTurnedOff"|"sheetRotatorTurnedOn"|"sheetRotatorUnderTemperature"|"sheetRotatorUnrecoverableFailure"|"sheetRotatorUnrecoverableStorageError"|"sheetRotatorWarmingUp"|"slitterAdded"|"slitterAlmostEmpty"|"slitterAlmostFull"|"slitterAtLimit"|"slitterClosed"|"slitterConfigurationChange"|"slitterCoverClosed"|"slitterCoverOpen"|"slitterEmpty"|"slitterFull"|"slitterInterlockClosed"|"slitterInterlockOpen"|"slitterJam"|"slitterLifeAlmostOver"|"slitterLifeOver"|"slitterMemoryExhausted"|"slitterMissing"|"slitterMotorFailure"|"slitterNearLimit"|"slitterOffline"|"slitterOpened"|"slitterOverTemperature"|"slitterPowerSaver"|"slitterRecoverableFailure"|"slitterRecoverableStorage"|"slitterRemoved"|"slitterResourceAdded"|"slitterResourceRemoved"|"slitterThermistorFailure"|"slitterTimingFailure"|"slitterTurnedOff"|"slitterTurnedOn"|"slitterUnderTemperature"|"slitterUnrecoverableFailure"|"slitterUnrecoverableStorageError"|"slitterWarmingUp"|"stackerAdded"|"stackerAlmostEmpty"|"stackerAlmostFull"|"stackerAtLimit"|"stackerClosed"|"stackerConfigurationChange"|"stackerCoverClosed"|"stackerCoverOpen"|"stackerEmpty"|"stackerFull"|"stackerInterlockClosed"|"stackerInterlockOpen"|"stackerJam"|"stackerLifeAlmostOver"|"stackerLifeOver"|"stackerMemoryExhausted"|"stackerMissing"|"stackerMotorFailure"|"stackerNearLimit"|"stackerOffline"|"stackerOpened"|"stackerOverTemperature"|"stackerPowerSaver"|"stackerRecoverableFailure"|"stackerRecoverableStorage"|"stackerRemoved"|"stackerResourceAdded"|"stackerResourceRemoved"|"stackerThermistorFailure"|"stackerTimingFailure"|"stackerTurnedOff"|"stackerTurnedOn"|"stackerUnderTemperature"|"stackerUnrecoverableFailure"|"stackerUnrecoverableStorageError"|"stackerWarmingUp"|"standby"|"staplerAdded"|"staplerAlmostEmpty"|"staplerAlmostFull"|"staplerAtLimit"|"staplerClosed"|"staplerConfigurationChange"|"staplerCoverClosed"|"staplerCoverOpen"|"staplerEmpty"|"staplerFull"|"staplerInterlockClosed"|"staplerInterlockOpen"|"staplerJam"|"staplerLifeAlmostOver"|"staplerLifeOver"|"staplerMemoryExhausted"|"staplerMissing"|"staplerMotorFailure"|"staplerNearLimit"|"staplerOffline"|"staplerOpened"|"staplerOverTemperature"|"staplerPowerSaver"|"staplerRecoverableFailure"|"staplerRecoverableStorage"|"staplerRemoved"|"staplerResourceAdded"|"staplerResourceRemoved"|"staplerThermistorFailure"|"staplerTimingFailure"|"staplerTurnedOff"|"staplerTurnedOn"|"staplerUnderTemperature"|"staplerUnrecoverableFailure"|"staplerUnrecoverableStorageError"|"staplerWarmingUp"|"stitcherAdded"|"stitcherAlmostEmpty"|"stitcherAlmostFull"|"stitcherAtLimit"|"stitcherClosed"|"stitcherConfigurationChange"|"stitcherCoverClosed"|"stitcherCoverOpen"|"stitcherEmpty"|"stitcherFull"|"stitcherInterlockClosed"|"stitcherInterlockOpen"|"stitcherJam"|"stitcherLifeAlmostOver"|"stitcherLifeOver"|"stitcherMemoryExhausted"|"stitcherMissing"|"stitcherMotorFailure"|"stitcherNearLimit"|"stitcherOffline"|"stitcherOpened"|"stitcherOverTemperature"|"stitcherPowerSaver"|"stitcherRecoverableFailure"|"stitcherRecoverableStorage"|"stitcherRemoved"|"stitcherResourceAdded"|"stitcherResourceRemoved"|"stitcherThermistorFailure"|"stitcherTimingFailure"|"stitcherTurnedOff"|"stitcherTurnedOn"|"stitcherUnderTemperature"|"stitcherUnrecoverableFailure"|"stitcherUnrecoverableStorageError"|"stitcherWarmingUp"|"subunitAdded"|"subunitAlmostEmpty"|"subunitAlmostFull"|"subunitAtLimit"|"subunitClosed"|"subunitCoolingDown"|"subunitEmpty"|"subunitFull"|"subunitLifeAlmostOver"|"subunitLifeOver"|"subunitMemoryExhausted"|"subunitMissing"|"subunitMotorFailure"|"subunitNearLimit"|"subunitOffline"|"subunitOpened"|"subunitOverTemperature"|"subunitPowerSaver"|"subunitRecoverableFailure"|"subunitRecoverableStorage"|"subunitRemoved"|"subunitResourceAdded"|"subunitResourceRemoved"|"subunitThermistorFailure"|"subunitTimingFailure"|"subunitTurnedOff"|"subunitTurnedOn"|"subunitUnderTemperature"|"subunitUnrecoverableFailure"|"subunitUnrecoverableStorage"|"subunitWarmingUp"|"suspend"|"testing"|"trimmerAdded"|"trimmerAlmostEmpty"|"trimmerAlmostFull"|"trimmerAtLimit"|"trimmerClosed"|"trimmerConfigurationChange"|"trimmerCoverClosed"|"trimmerCoverOpen"|"trimmerEmpty"|"trimmerFull"|"trimmerInterlockClosed"|"trimmerInterlockOpen"|"trimmerJam"|"trimmerLifeAlmostOver"|"trimmerLifeOver"|"trimmerMemoryExhausted"|"trimmerMissing"|"trimmerMotorFailure"|"trimmerNearLimit"|"trimmerOffline"|"trimmerOpened"|"trimmerOverTemperature"|"trimmerPowerSaver"|"trimmerRecoverableFailure"|"trimmerRecoverableStorage"|"trimmerRemoved"|"trimmerResourceAdded"|"trimmerResourceRemoved"|"trimmerThermistorFailure"|"trimmerTimingFailure"|"trimmerTurnedOff"|"trimmerTurnedOn"|"trimmerUnderTemperature"|"trimmerUnrecoverableFailure"|"trimmerUnrecoverableStorageError"|"trimmerWarmingUp"|"unknown"|"wrapperAdded"|"wrapperAlmostEmpty"|"wrapperAlmostFull"|"wrapperAtLimit"|"wrapperClosed"|"wrapperConfigurationChange"|"wrapperCoverClosed"|"wrapperCoverOpen"|"wrapperEmpty"|"wrapperFull"|"wrapperInterlockClosed"|"wrapperInterlockOpen"|"wrapperJam"|"wrapperLifeAlmostOver"|"wrapperLifeOver"|"wrapperMemoryExhausted"|"wrapperMissing"|"wrapperMotorFailure"|"wrapperNearLimit"|"wrapperOffline"|"wrapperOpened"|"wrapperOverTemperature"|"wrapperPowerSaver"|"wrapperRecoverableFailure"|"wrapperRecoverableStorage"|"wrapperRemoved"|"wrapperResourceAdded"|"wrapperResourceRemoved"|"wrapperThermistorFailure"|"wrapperTimingFailure"|"wrapperTurnedOff"|"wrapperTurnedOn"|"wrapperUnderTemperature"|"wrapperUnrecoverableFailure"|"wrapperUnrecoverableStorageError"|"wrapperWarmingUp";

public type microsoft\.graph\.teamsAppDistributionMethod "store"|"organization"|"sideloaded"|"unknownFutureValue";

public type microsoft\.graph\.todoTask record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.itemBody body?;
    string bodyLastModifiedDateTime?;
    string[] categories?;
    microsoft\.graph\.dateTimeTimeZone completedDateTime?;
    string createdDateTime?;
    microsoft\.graph\.dateTimeTimeZone dueDateTime?;
    boolean? hasAttachments?;
    microsoft\.graph\.importance importance?;
    boolean isReminderOn?;
    string lastModifiedDateTime?;
    microsoft\.graph\.patternedRecurrence recurrence?;
    microsoft\.graph\.dateTimeTimeZone reminderDateTime?;
    microsoft\.graph\.dateTimeTimeZone startDateTime?;
    microsoft\.graph\.taskStatus status?;
    string? title?;
    microsoft\.graph\.attachmentBase[] attachments?;
    microsoft\.graph\.attachmentSession[] attachmentSessions?;
    microsoft\.graph\.checklistItem[] checklistItems?;
    microsoft\.graph\.extension[] extensions?;
    microsoft\.graph\.linkedResource[] linkedResources?;
};

public type microsoft\.graph\.drive record {
    *microsoft\.graph\.baseItem;
    string? driveType?;
    microsoft\.graph\.identitySet owner?;
    microsoft\.graph\.quota quota?;
    microsoft\.graph\.sharepointIds sharePointIds?;
    microsoft\.graph\.systemFacet system?;
    microsoft\.graph\.driveItem[] bundles?;
    microsoft\.graph\.driveItem[] following?;
    microsoft\.graph\.driveItem[] items?;
    microsoft\.graph\.list list?;
    microsoft\.graph\.driveItem root?;
    microsoft\.graph\.driveItem[] special?;
};

public type microsoft\.graph\.onenotePage record {
    *microsoft\.graph\.onenoteEntitySchemaObjectModel;
    string? content?;
    string? contentUrl?;
    string? createdByAppId?;
    string? lastModifiedDateTime?;
    decimal? level?;
    microsoft\.graph\.pageLinks links?;
    decimal? 'order?;
    string? title?;
    string[] userTags?;
    microsoft\.graph\.notebook parentNotebook?;
    microsoft\.graph\.onenoteSection parentSection?;
};

public type microsoft\.graph\.scheduleChangeState "pending"|"approved"|"declined"|"unknownFutureValue";

public type microsoft\.graph\.presenceStatusMessage record {
    microsoft\.graph\.dateTimeTimeZone expiryDateTime?;
    microsoft\.graph\.itemBody message?;
    string? publishedDateTime?;
};

public type microsoft\.graph\.termStore\.localizedLabel record {
    boolean? isDefault?;
    string? languageTag?;
    string? name?;
};

public type microsoft\.graph\.chatMessageImportance "normal"|"high"|"urgent"|"unknownFutureValue";

public type microsoft\.graph\.windowsHelloForBusinessAuthenticationMethod record {
    *microsoft\.graph\.authenticationMethod;
    string? createdDateTime?;
    string? displayName?;
    microsoft\.graph\.authenticationMethodKeyStrength keyStrength?;
    microsoft\.graph\.device device?;
};

public type microsoft\.graph\.plannerExternalReferences record {
};

public type microsoft\.graph\.meetingChatHistoryDefaultMode "none"|"all"|"unknownFutureValue";

public type microsoft\.graph\.itemActivity record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.accessAction access?;
    string? activityDateTime?;
    microsoft\.graph\.identitySet actor?;
    microsoft\.graph\.driveItem driveItem?;
};

public type microsoft\.graph\.workbookNamedItem record {
    *microsoft\.graph\.entity;
    string? comment?;
    string? name?;
    string scope?;
    string? 'type?;
    microsoft\.graph\.Json value?;
    boolean visible?;
    microsoft\.graph\.workbookWorksheet worksheet?;
};

public type microsoft\.graph\.plannerBucket record {
    *microsoft\.graph\.entity;
    string name?;
    string? orderHint?;
    string? planId?;
    microsoft\.graph\.plannerTask[] tasks?;
};

public type microsoft\.graph\.onenoteSection record {
    *microsoft\.graph\.onenoteEntityHierarchyModel;
    boolean? isDefault?;
    microsoft\.graph\.sectionLinks links?;
    string? pagesUrl?;
    microsoft\.graph\.onenotePage[] pages?;
    microsoft\.graph\.notebook parentNotebook?;
    microsoft\.graph\.sectionGroup parentSectionGroup?;
};

public type microsoft\.graph\.teamsAsyncOperation record {
    *microsoft\.graph\.entity;
    decimal attemptsCount?;
    string createdDateTime?;
    microsoft\.graph\.operationError 'error?;
    string lastActionDateTime?;
    microsoft\.graph\.teamsAsyncOperationType operationType?;
    microsoft\.graph\.teamsAsyncOperationStatus status?;
    string? targetResourceId?;
    string? targetResourceLocation?;
};

public type microsoft\.graph\.oAuth2PermissionGrant record {
    *microsoft\.graph\.entity;
    string clientId?;
    string? consentType?;
    string? principalId?;
    string resourceId?;
    string? scope?;
};

# Represents the Queries record for the operation: getChildrenContent
public type GetChildrenContentQueries record {
    # Format of the content
    string \$format?;
};

public type microsoft\.graph\.cloudClipboardItem record {
    *microsoft\.graph\.entity;
    string createdDateTime?;
    string expirationDateTime?;
    string? lastModifiedDateTime?;
    microsoft\.graph\.cloudClipboardItemPayload[] payloads?;
};

public type microsoft\.graph\.thumbnailColumn record {
};

public type microsoft\.graph\.printEvent "jobStarted"|"unknownFutureValue";

public type microsoft\.graph\.extractSensitivityLabelsResult record {
    microsoft\.graph\.sensitivityLabelAssignment[] labels?;
};

public type microsoft\.graph\.scheduleEntityTheme "white"|"blue"|"green"|"purple"|"pink"|"yellow"|"gray"|"darkBlue"|"darkGreen"|"darkPurple"|"darkPink"|"darkYellow"|"unknownFutureValue";

public type microsoft\.graph\.driveItemUploadableProperties record {
    string? description?;
    microsoft\.graph\.driveItemSource driveItemSource?;
    decimal? fileSize?;
    microsoft\.graph\.fileSystemInfo fileSystemInfo?;
    microsoft\.graph\.mediaSource mediaSource?;
    string? name?;
};

public type microsoft\.graph\.itemReference record {
    string? driveId?;
    string? driveType?;
    string? id?;
    string? name?;
    string? path?;
    string? shareId?;
    microsoft\.graph\.sharepointIds sharepointIds?;
    string? siteId?;
};

public type microsoft\.graph\.deviceMetadata record {
    string? deviceType?;
    string? ipAddress?;
    microsoft\.graph\.operatingSystemSpecifications operatingSystemSpecifications?;
};

public type microsoft\.graph\.workbookOperationStatus "notStarted"|"running"|"succeeded"|"failed";

public type driveItemid_microsoft_graph_assignSensitivityLabel_body record {
    string? sensitivityLabelId?;
    microsoft\.graph\.sensitivityLabelAssignmentMethod assignmentMethod?;
    string? justificationText?;
};

public type microsoft\.graph\.fileSystemInfo record {
    string? createdDateTime?;
    string? lastAccessedDateTime?;
    string? lastModifiedDateTime?;
};

public type microsoft\.graph\.printDuplexMode "flipOnLongEdge"|"flipOnShortEdge"|"oneSided"|"unknownFutureValue";

public type microsoft\.graph\.workbookChartGridlines record {
    *microsoft\.graph\.entity;
    boolean visible?;
    microsoft\.graph\.workbookChartGridlinesFormat format?;
};

public type microsoft\.graph\.directoryObject record {
    *microsoft\.graph\.entity;
    string? deletedDateTime?;
};

public type microsoft\.graph\.categoryColor "none"|"preset0"|"preset1"|"preset2"|"preset3"|"preset4"|"preset5"|"preset6"|"preset7"|"preset8"|"preset9"|"preset10"|"preset11"|"preset12"|"preset13"|"preset14"|"preset15"|"preset16"|"preset17"|"preset18"|"preset19"|"preset20"|"preset21"|"preset22"|"preset23"|"preset24";

public type microsoft\.graph\.choiceColumn record {
    boolean? allowTextEntry?;
    string[] choices?;
    string? displayAs?;
};

# Represents the Queries record for the operation: getChildrenInRoot
public type GetChildrenInRootQueries record {
    # Expand related entities
    string[] \$expand?;
    # Select properties to be returned
    string[] \$select?;
};

public type microsoft\.graph\.scheduleChangeRequestActor "sender"|"recipient"|"manager"|"system"|"unknownFutureValue";

public type microsoft\.graph\.plannerUser record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.plannerPlan[] plans?;
    microsoft\.graph\.plannerTask[] tasks?;
};

public type microsoft\.graph\.outlookUser record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.outlookCategory[] masterCategories?;
};

public type root_microsoft_graph_createUploadSession_body record {
    microsoft\.graph\.driveItemUploadableProperties item?;
};

public type microsoft\.graph\.joinMeetingIdSettings record {
    boolean? isPasscodeRequired?;
    string? joinMeetingId?;
    string? passcode?;
};

public type microsoft\.graph\.appRoleAssignment record {
    *microsoft\.graph\.directoryObject;
    string appRoleId?;
    string? createdDateTime?;
    string? principalDisplayName?;
    string? principalId?;
    string? principalType?;
    string? resourceDisplayName?;
    string? resourceId?;
};

public type microsoft\.graph\.meetingLiveShareOptions "enabled"|"disabled"|"unknownFutureValue";

# Represents the Queries record for the operation: listChildren
public type ListChildrenQueries record {
    # Skip the first n items
    int \$skip?;
    # Show only the first n items
    int \$top?;
    # Filter items by property values
    string \$filter?;
    # Search items by search phrases
    string \$search?;
    # Order items by property values
    string[] \$orderby?;
    # Expand related entities
    string[] \$expand?;
    # Include count of items
    boolean \$count?;
    # Select properties to be returned
    string[] \$select?;
};

public type microsoft\.graph\.offerShiftRequest record {
    *microsoft\.graph\.scheduleChangeRequest;
    string? recipientActionDateTime?;
    string? recipientActionMessage?;
    string? recipientUserId?;
    string? senderShiftId?;
};

public type microsoft\.graph\.plannerCategoryDescriptions record {
    string? category1?;
    string? category10?;
    string? category11?;
    string? category12?;
    string? category13?;
    string? category14?;
    string? category15?;
    string? category16?;
    string? category17?;
    string? category18?;
    string? category19?;
    string? category2?;
    string? category20?;
    string? category21?;
    string? category22?;
    string? category23?;
    string? category24?;
    string? category25?;
    string? category3?;
    string? category4?;
    string? category5?;
    string? category6?;
    string? category7?;
    string? category8?;
    string? category9?;
};

public type microsoft\.graph\.operationStatus "NotStarted"|"Running"|"Completed"|"Failed";

public type microsoft\.graph\.dateTimeColumn record {
    string? displayAs?;
    string? format?;
};

public type microsoft\.graph\.hyperlinkOrPictureColumn record {
    boolean? isPicture?;
};

public type root_microsoft_graph_copy_body record {
    string? name?;
    microsoft\.graph\.itemReference parentReference?;
    boolean? childrenOnly = false;
    boolean? includeAllVersionHistory = false;
};

public type microsoft\.graph\.workbookSortField record {
    boolean 'ascending?;
    string? color?;
    string dataOption?;
    microsoft\.graph\.workbookIcon icon?;
    decimal 'key?;
    string sortOn?;
};

public type microsoft\.graph\.contentTypeOrder record {
    boolean? default?;
    decimal? position?;
};

public type microsoft\.graph\.mailboxSettings record {
    string? archiveFolder?;
    microsoft\.graph\.automaticRepliesSetting automaticRepliesSetting?;
    string? dateFormat?;
    microsoft\.graph\.delegateMeetingMessageDeliveryOptions delegateMeetingMessageDeliveryOptions?;
    microsoft\.graph\.localeInfo language?;
    string? timeFormat?;
    string? timeZone?;
    microsoft\.graph\.userPurpose userPurpose?;
    microsoft\.graph\.workingHours workingHours?;
};

public type microsoft\.graph\.workbookTableSort record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.workbookSortField[] fields?;
    boolean matchCase?;
    string method?;
};

public type microsoft\.graph\.printScaling "auto"|"shrinkToFit"|"fill"|"fit"|"none"|"unknownFutureValue";

public type microsoft\.graph\.plannerPlanDetails record {
    *microsoft\.graph\.entity;
    microsoft\.graph\.plannerCategoryDescriptions categoryDescriptions?;
    microsoft\.graph\.plannerUserIds sharedWith?;
};

public type microsoft\.graph\.bodyType "text"|"html";

public type microsoft\.graph\.physicalAddress record {
    string? city?;
    string? countryOrRegion?;
    string? postalCode?;
    string? state?;
    string? street?;
};

public type microsoft\.graph\.deviceHealthAttestationState record {
    string? attestationIdentityKey?;
    string? bitLockerStatus?;
    string? bootAppSecurityVersion?;
    string? bootDebugging?;
    string? bootManagerSecurityVersion?;
    string? bootManagerVersion?;
    string? bootRevisionListInfo?;
    string? codeIntegrity?;
    string? codeIntegrityCheckVersion?;
    string? codeIntegrityPolicy?;
    string? contentNamespaceUrl?;
    string? contentVersion?;
    string? dataExcutionPolicy?;
    string? deviceHealthAttestationStatus?;
    string? earlyLaunchAntiMalwareDriverProtection?;
    string? healthAttestationSupportedStatus?;
    string? healthStatusMismatchInfo?;
    string issuedDateTime?;
    string? lastUpdateDateTime?;
    string? operatingSystemKernelDebugging?;
    string? operatingSystemRevListInfo?;
    string? pcr0?;
    string? pcrHashAlgorithm?;
    decimal resetCount?;
    decimal restartCount?;
    string? safeMode?;
    string? secureBoot?;
    string? secureBootConfigurationPolicyFingerPrint?;
    string? testSigning?;
    string? tpmVersion?;
    string? virtualSecureMode?;
    string? windowsPE?;
};

public type microsoft\.graph\.itemBody record {
    string? content?;
    microsoft\.graph\.bodyType contentType?;
};

public type microsoft\.graph\.documentSetVersion record {
    *microsoft\.graph\.listItemVersion;
    string? comment?;
    microsoft\.graph\.identitySet createdBy?;
    string? createdDateTime?;
    microsoft\.graph\.documentSetVersionItem[] items?;
    boolean? shouldCaptureMinorVersion?;
};

public type microsoft\.graph\.activityMetadata record {
    microsoft\.graph\.userActivityType activity?;
};

public type microsoft\.graph\.remoteItem record {
    microsoft\.graph\.identitySet createdBy?;
    string? createdDateTime?;
    microsoft\.graph\.file file?;
    microsoft\.graph\.fileSystemInfo fileSystemInfo?;
    microsoft\.graph\.folder folder?;
    string? id?;
    microsoft\.graph\.image image?;
    microsoft\.graph\.identitySet lastModifiedBy?;
    string? lastModifiedDateTime?;
    string? name?;
    microsoft\.graph\.package package?;
    microsoft\.graph\.itemReference parentReference?;
    microsoft\.graph\.shared shared?;
    microsoft\.graph\.sharepointIds sharepointIds?;
    decimal? size?;
    microsoft\.graph\.specialFolder specialFolder?;
    microsoft\.graph\.video video?;
    string? webDavUrl?;
    string? webUrl?;
};

public type microsoft\.graph\.plannerAppliedCategories record {
};

public type microsoft\.graph\.schedulingGroup record {
    *microsoft\.graph\.changeTrackedEntity;
    string? code?;
    string? displayName?;
    boolean? isActive?;
    string[] userIds?;
};

public type Collection\ of\ permission record {
    microsoft\.graph\.permission[] value?;
    string? \@odata\.nextLink?;
};
